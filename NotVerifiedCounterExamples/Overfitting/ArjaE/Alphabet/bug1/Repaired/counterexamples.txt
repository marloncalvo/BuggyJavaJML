/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:230: warning: The prover cannot establish an assertion (InvariantLeaveCaller: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:4: ) in method driver:  (Caller: Alphabet.driver(int), Callee: Alphabet.isVowel())
		result[0] = isVowel();
		                   ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:4: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:230: 
   /*@ private invariant vowel_set ==> 
               ^

TRACE of Alphabet.driver(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:4:  	//@ private invariant vowel_set ==> (vowel == (c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U')); 
			VALUE: vowel_set	 === false
			VALUE: vowel_set ==> (vowel == (c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:11:  	//@ private invariant alphabetic_set ==> alphabetic == (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')); 
			VALUE: alphabetic_set	 === false
			VALUE: alphabetic_set ==> alphabetic == (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:14:  	//@ private invariant digit_set ==> digit == ('0' <= c && c <= '9'); 
			VALUE: digit_set	 === false
			VALUE: digit_set ==> digit == ('0' <= c && c <= '9')	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:17:  	//@ private invariant uppercase_set ==> (uppercase == ('A' <= c && c <= 'Z')); 
			VALUE: uppercase_set	 === false
			VALUE: uppercase_set ==> (uppercase == ('A' <= c && c <= 'Z'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:20:  	//@ private invariant lowercase_set ==> (lowercase == ('a' <= c && c <= 'z')); 
			VALUE: lowercase_set	 === false
			VALUE: lowercase_set ==> (lowercase == ('a' <= c && c <= 'z'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:202:  	requires 0 <= op && op <= 4; 
			VALUE: 0	 === 0
			VALUE: op	 === 0
			VALUE: 0 <= op	 === true
			VALUE: op	 === 0
			VALUE: 4	 === 4
			VALUE: op <= 4	 === true
			VALUE: 0 <= op && op <= 4	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:204:  	requires op == 0; 
			VALUE: op	 === 0
			VALUE: 0	 === 0
			VALUE: op == 0	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:202:  	requires 0 <= op && op <= 4; 
			VALUE: 0	 === 0
			VALUE: op	 === 0
			VALUE: 0 <= op	 === true
			VALUE: op	 === 0
			VALUE: 4	 === 4
			VALUE: op <= 4	 === true
			VALUE: 0 <= op && op <= 4	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:209:  	requires op == 1; 
			VALUE: op	 === 0
			VALUE: 1	 === 1
			VALUE: op == 1	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:202:  	requires 0 <= op && op <= 4; 
			VALUE: 0	 === 0
			VALUE: op	 === 0
			VALUE: 0 <= op	 === true
			VALUE: op	 === 0
			VALUE: 4	 === 4
			VALUE: op <= 4	 === true
			VALUE: 0 <= op && op <= 4	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:213:  	requires op == 2; 
			VALUE: op	 === 0
			VALUE: 2	 === 2
			VALUE: op == 2	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:202:  	requires 0 <= op && op <= 4; 
			VALUE: 0	 === 0
			VALUE: op	 === 0
			VALUE: 0 <= op	 === true
			VALUE: op	 === 0
			VALUE: 4	 === 4
			VALUE: op <= 4	 === true
			VALUE: 0 <= op && op <= 4	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:217:  	requires op == 3; 
			VALUE: op	 === 0
			VALUE: 3	 === 3
			VALUE: op == 3	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:202:  	requires 0 <= op && op <= 4; 
			VALUE: 0	 === 0
			VALUE: op	 === 0
			VALUE: 0 <= op	 === true
			VALUE: op	 === 0
			VALUE: 4	 === 4
			VALUE: op <= 4	 === true
			VALUE: 0 <= op && op <= 4	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:221:  	requires op == 4; 
			VALUE: op	 === 0
			VALUE: 4	 === 4
			VALUE: op == 4	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:226:  	/*@ non_null */  boolean[] result = new boolean[6]
			VALUE: 6	 === 6
			VALUE: new boolean[6]	 === REF!val!16
			VALUE: result	 === REF!val!16
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:226:  	PossiblyNullInitialization assertion: `NEWARRAY_6719 != null
			VALUE: null	 === NULL
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:1:  	switch (op) ...
			VALUE: op	 === 0
			VALUE: (op)	 === 0
				Selection = 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:1:  	case 0:
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:229:  	vowel_set = true
			VALUE: true	 === true
			VALUE: vowel_set = true	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:230:  	result[0] = isVowel()
			VALUE: result	 === REF!val!16
			VALUE: 0	 === 0
			VALUE: isVowel()	 === false
			VALUE: result[0] = isVowel()	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:230:  	PossiblyNullDeReference assertion: result != null
			VALUE: null	 === NULL
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:230:  	PossiblyNegativeIndex assertion: 0 >= 0
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:230:  	PossiblyTooLargeIndex assertion: result.length > 0
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:4:  	//@ private invariant vowel_set ==> (vowel == (c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U')); 
			VALUE: vowel_set	 === true
			VALUE: vowel	 === false
			VALUE: c	 === 'a' (97)
			VALUE: 'a'	 === 'a' (97)
			VALUE: c == 'a'	 === true
			VALUE: c == 'a' || c == 'A'	 === true
			VALUE: c == 'a' || c == 'A' || c == 'e'	 === true
			VALUE: c == 'a' || c == 'A' || c == 'e' || c == 'E'	 === true
			VALUE: c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i'	 === true
			VALUE: c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I'	 === true
			VALUE: c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o'	 === true
			VALUE: c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O'	 === true
			VALUE: c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u'	 === true
			VALUE: c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U'	 === true
			VALUE: (c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U')	 === true
			VALUE: vowel == (c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U')	 === false
			VALUE: (vowel == (c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U'))	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:4:  	InvariantLeaveCaller assertion: _JML__tmp6476
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:230:  Invalid assertion (InvariantLeaveCaller)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:4:  Associated location

/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:56: warning: The prover cannot establish an assertion (Postcondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:36: ) in method isVowel
       return vowel;
       ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:36: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:56: 
     @   ensures vowel_set && \result == vowel;
         ^

TRACE of Alphabet.isVowel()
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:4:  	//@ private invariant vowel_set ==> (vowel == (c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U')); 
			VALUE: vowel_set	 === false
			VALUE: vowel_set ==> (vowel == (c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:11:  	//@ private invariant alphabetic_set ==> alphabetic == (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')); 
			VALUE: alphabetic_set	 === true
			VALUE: alphabetic	 === true
			VALUE: 'a'	 === 'a' (97)
			VALUE: c	 === 'j' (106)
			VALUE: 'a' <= c	 === true
			VALUE: c	 === 'j' (106)
			VALUE: 'z'	 === 'z' (122)
			VALUE: c <= 'z'	 === true
			VALUE: 'a' <= c && c <= 'z'	 === true
			VALUE: ('a' <= c && c <= 'z')	 === true
			VALUE: ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')	 === true
			VALUE: (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z'))	 === true
			VALUE: alphabetic == (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z'))	 === true
			VALUE: alphabetic_set ==> alphabetic == (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:14:  	//@ private invariant digit_set ==> digit == ('0' <= c && c <= '9'); 
			VALUE: digit_set	 === false
			VALUE: digit_set ==> digit == ('0' <= c && c <= '9')	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:17:  	//@ private invariant uppercase_set ==> (uppercase == ('A' <= c && c <= 'Z')); 
			VALUE: uppercase_set	 === true
			VALUE: uppercase	 === false
			VALUE: 'A'	 === 'A' (65)
			VALUE: c	 === 'j' (106)
			VALUE: 'A' <= c	 === true
			VALUE: c	 === 'j' (106)
			VALUE: 'Z'	 === 'Z' (90)
			VALUE: c <= 'Z'	 === false
			VALUE: 'A' <= c && c <= 'Z'	 === false
			VALUE: ('A' <= c && c <= 'Z')	 === false
			VALUE: uppercase == ('A' <= c && c <= 'Z')	 === true
			VALUE: (uppercase == ('A' <= c && c <= 'Z'))	 === true
			VALUE: uppercase_set ==> (uppercase == ('A' <= c && c <= 'Z'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:20:  	//@ private invariant lowercase_set ==> (lowercase == ('a' <= c && c <= 'z')); 
			VALUE: lowercase_set	 === true
			VALUE: lowercase	 === true
			VALUE: 'a'	 === 'a' (97)
			VALUE: c	 === 'j' (106)
			VALUE: 'a' <= c	 === true
			VALUE: c	 === 'j' (106)
			VALUE: 'z'	 === 'z' (122)
			VALUE: c <= 'z'	 === true
			VALUE: 'a' <= c && c <= 'z'	 === true
			VALUE: ('a' <= c && c <= 'z')	 === true
			VALUE: lowercase == ('a' <= c && c <= 'z')	 === true
			VALUE: (lowercase == ('a' <= c && c <= 'z'))	 === true
			VALUE: lowercase_set ==> (lowercase == ('a' <= c && c <= 'z'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:1:  	switch (c) ...
			VALUE: c	 === 'j' (106)
			VALUE: (c)	 === 'j' (106)
				Selection = 106
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:56:  	return vowel;
			VALUE: vowel	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:4:  	//@ private invariant vowel_set ==> (vowel == (c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U')); 
			VALUE: vowel_set	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:4:  	InvariantExit assertion: _JML__tmp285
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:11:  	//@ private invariant alphabetic_set ==> alphabetic == (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')); 
			VALUE: alphabetic_set	 === true
			VALUE: alphabetic	 === true
			VALUE: 'a'	 === 'a' (97)
			VALUE: c	 === 'j' (106)
			VALUE: 'a' <= c	 === true
			VALUE: c	 === 'j' (106)
			VALUE: 'z'	 === 'z' (122)
			VALUE: c <= 'z'	 === true
			VALUE: 'a' <= c && c <= 'z'	 === true
			VALUE: ('a' <= c && c <= 'z')	 === true
			VALUE: ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')	 === true
			VALUE: (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z'))	 === true
			VALUE: alphabetic == (('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:11:  	InvariantExit assertion: _JML__tmp337
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:14:  	//@ private invariant digit_set ==> digit == ('0' <= c && c <= '9'); 
			VALUE: digit_set	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:14:  	InvariantExit assertion: _JML__tmp359
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:17:  	//@ private invariant uppercase_set ==> (uppercase == ('A' <= c && c <= 'Z')); 
			VALUE: uppercase_set	 === true
			VALUE: uppercase	 === false
			VALUE: 'A'	 === 'A' (65)
			VALUE: c	 === 'j' (106)
			VALUE: 'A' <= c	 === true
			VALUE: c	 === 'j' (106)
			VALUE: 'Z'	 === 'Z' (90)
			VALUE: c <= 'Z'	 === false
			VALUE: 'A' <= c && c <= 'Z'	 === false
			VALUE: ('A' <= c && c <= 'Z')	 === false
			VALUE: uppercase == ('A' <= c && c <= 'Z')	 === true
			VALUE: (uppercase == ('A' <= c && c <= 'Z'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:17:  	InvariantExit assertion: _JML__tmp371
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:20:  	//@ private invariant lowercase_set ==> (lowercase == ('a' <= c && c <= 'z')); 
			VALUE: lowercase_set	 === true
			VALUE: lowercase	 === true
			VALUE: 'a'	 === 'a' (97)
			VALUE: c	 === 'j' (106)
			VALUE: 'a' <= c	 === true
			VALUE: c	 === 'j' (106)
			VALUE: 'z'	 === 'z' (122)
			VALUE: c <= 'z'	 === true
			VALUE: 'a' <= c && c <= 'z'	 === true
			VALUE: ('a' <= c && c <= 'z')	 === true
			VALUE: lowercase == ('a' <= c && c <= 'z')	 === true
			VALUE: (lowercase == ('a' <= c && c <= 'z'))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:20:  	InvariantExit assertion: _JML__tmp383
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:36:  	ensures vowel_set && \result == vowel; 
			VALUE: vowel_set	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:56:  Invalid assertion (Postcondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/Alphabet/bug1/Repaired/Alphabet.java:36:  Associated location

4 warnings
