
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228: warning: The prover cannot establish an assertion (ArithmeticOperationRange) in method payTuitionWithDebitCard:  overflow in int sum
            tuitionBalance += payment; // tuitionBalance -= payment;
                           ^

TRACE of ArjaE.StudentEnrolment.bug33.Repaired.StudentEnrollment.payTuitionWithDebitCard(int)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:216:  	requires validPayment(payment); 
			VALUE: payment	 === 2147483647
			VALUE: validPayment(payment)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_4177
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp4194
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_4198
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp4215
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__451
			VALUE: _$CPRE__451	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:217:  	requires Integer.MIN_VALUE <= tuitionBalance - payment; 
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: tuitionBalance	 === 1
			VALUE: payment	 === 2147483647
			VALUE: tuitionBalance - payment	 === ( - 2147483646 )
			VALUE: Integer.MIN_VALUE <= tuitionBalance - payment	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:222:  	requires !validPayment(payment); 
			VALUE: payment	 === 2147483647
			VALUE: validPayment(payment)	 === true
			VALUE: !validPayment(payment)	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_4251
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp4268
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__452
			VALUE: _$CPRE__452	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	if (validPayment(payment)) ...
			VALUE: payment	 === 2147483647
			VALUE: validPayment(payment)	 === true
			VALUE: (validPayment(payment))	 === true
				Condition = true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_4300
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp4317
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_4321
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp4338
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__453
			VALUE: _$CPRE__453	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	tuitionBalance += payment
			VALUE: payment	 === 2147483647
			VALUE: tuitionBalance += payment	 === 1
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	Assignable assertion: _JML__tmp4368 || (!Pre_23 || (_JML__tmp4367.`alloc__ > 0 || `THIS == `THIS))
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	ArithmeticOperationRange assertion: !(0 < `THIS.tuitionBalance && 0 < payment) || `THIS.tuitionBalance <= 2147483647 - payment
			VALUE: !(0 < `THIS.tuitionBalance_692_0___13 && 0 < payment_8894_8894___23) || `THIS.tuitionBalance_692_0___13 <= 2147483647 - payment_8894_8894___23	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  Invalid assertion (ArithmeticOperationRange)


/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:225: warning: The prover cannot establish an assertion (InvariantExit: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14: ) in method payTuitionWithDebitCard
    private /*@ spec_public @*/ void payTuitionWithDebitCard(int payment) 
                                     ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14: warning: Associated declaration: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:225: 
    /*@ public invariant tuitionBalance <= 
               ^

TRACE of ArjaE.StudentEnrolment.bug33.Repaired.StudentEnrollment.payTuitionWithDebitCard(int)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:216:  	requires validPayment(payment); 
			VALUE: payment	 === 4240
			VALUE: validPayment(payment)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_4177
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp4194
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_4198
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp4215
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__451
			VALUE: _$CPRE__451	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:217:  	requires Integer.MIN_VALUE <= tuitionBalance - payment; 
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: tuitionBalance	 === 1
			VALUE: payment	 === 4240
			VALUE: tuitionBalance - payment	 === ( - 4239 )
			VALUE: Integer.MIN_VALUE <= tuitionBalance - payment	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:222:  	requires !validPayment(payment); 
			VALUE: payment	 === 4240
			VALUE: validPayment(payment)	 === true
			VALUE: !validPayment(payment)	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_4251
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp4268
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__452
			VALUE: _$CPRE__452	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	if (validPayment(payment)) ...
			VALUE: payment	 === 4240
			VALUE: validPayment(payment)	 === true
			VALUE: (validPayment(payment))	 === true
				Condition = true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_4300
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp4317
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_4321
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp4338
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__453
			VALUE: _$CPRE__453	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	tuitionBalance += payment
			VALUE: payment	 === 4240
			VALUE: tuitionBalance += payment	 === 4241
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	Assignable assertion: _JML__tmp4368 || (!Pre_23 || (_JML__tmp4367.`alloc__ > 0 || `THIS == `THIS))
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	ArithmeticOperationRange assertion: !(0 < `THIS.tuitionBalance && 0 < payment) || `THIS.tuitionBalance <= 2147483647 - payment
			VALUE: !(0 < `THIS.tuitionBalance_692_0___13 && 0 < payment_8894_8894___23) || `THIS.tuitionBalance_692_0___13 <= 2147483647 - payment_8894_8894___23	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	ArithmeticOperationRange assertion: !(`THIS.tuitionBalance < 0 && payment < 0) || -2147483648 - payment <= `THIS.tuitionBalance
			VALUE: !(`THIS.tuitionBalance_692_0___13 < 0 && payment_8894_8894___23 < 0) || -2147483648 - payment_8894_8894___23 <= `THIS.tuitionBalance_692_0___13	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantExit assertion: `conditionalResult_4407
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantExit assertion: _JML__tmp4424
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:225:  Invalid assertion (InvariantExit)
: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  Associated location


/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:225: warning: The prover cannot establish an assertion (Postcondition: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:219: ) in method payTuitionWithDebitCard
    private /*@ spec_public @*/ void payTuitionWithDebitCard(int payment) 
                                     ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:219: warning: Associated declaration: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:225: 
      @   	ensures tuitionBalance == \old(tuitionBalance - payment);
          	^

TRACE of ArjaE.StudentEnrolment.bug33.Repaired.StudentEnrollment.payTuitionWithDebitCard(int)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 13
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 13
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:216:  	requires validPayment(payment); 
			VALUE: payment	 === 4239
			VALUE: validPayment(payment)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 13
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 13
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_4177
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp4194
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 13
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 13
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_4198
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp4215
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__451
			VALUE: _$CPRE__451	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 13
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 13
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:217:  	requires Integer.MIN_VALUE <= tuitionBalance - payment; 
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: tuitionBalance	 === 1
			VALUE: payment	 === 4239
			VALUE: tuitionBalance - payment	 === ( - 4238 )
			VALUE: Integer.MIN_VALUE <= tuitionBalance - payment	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:222:  	requires !validPayment(payment); 
			VALUE: payment	 === 4239
			VALUE: validPayment(payment)	 === true
			VALUE: !validPayment(payment)	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 13
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 13
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_4251
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp4268
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__452
			VALUE: _$CPRE__452	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 13
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 13
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	if (validPayment(payment)) ...
			VALUE: payment	 === 4239
			VALUE: validPayment(payment)	 === true
			VALUE: (validPayment(payment))	 === true
				Condition = true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 13
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 13
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_4300
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp4317
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 13
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 13
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_4321
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp4338
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__453
			VALUE: _$CPRE__453	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 13
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 13
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	tuitionBalance += payment
			VALUE: payment	 === 4239
			VALUE: tuitionBalance += payment	 === 4240
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	Assignable assertion: _JML__tmp4368 || (!Pre_23 || (_JML__tmp4367.`alloc__ > 0 || `THIS == `THIS))
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	ArithmeticOperationRange assertion: !(0 < `THIS.tuitionBalance && 0 < payment) || `THIS.tuitionBalance <= 2147483647 - payment
			VALUE: !(0 < `THIS.tuitionBalance_692_0___13 && 0 < payment_8894_8894___23) || `THIS.tuitionBalance_692_0___13 <= 2147483647 - payment_8894_8894___23	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:228:  	ArithmeticOperationRange assertion: !(`THIS.tuitionBalance < 0 && payment < 0) || -2147483648 - payment <= `THIS.tuitionBalance
			VALUE: !(`THIS.tuitionBalance_692_0___13 < 0 && payment_8894_8894___23 < 0) || -2147483648 - payment_8894_8894___23 <= `THIS.tuitionBalance_692_0___13	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 13
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 13
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:12:  	InvariantExit assertion: `conditionalResult_4407
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:14:  	InvariantExit assertion: _JML__tmp4424
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:8:  	NullField assertion: _JML__tmp4448
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:9:  	NullField assertion: _JML__tmp4452
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:219:  	ensures tuitionBalance == \old(tuitionBalance - payment); 
			VALUE: tuitionBalance	 === 4240
			VALUE: tuitionBalance	 === 1
			VALUE: payment	 === 4239
			VALUE: tuitionBalance - payment	 === ( - 4238 )
			VALUE: \old(tuitionBalance - payment)	 === ( - 4238 )
			VALUE: tuitionBalance == \old(tuitionBalance - payment)	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:225:  Invalid assertion (Postcondition)
: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug33/Repaired/StudentEnrollment.java:219:  Associated location

5 warnings
