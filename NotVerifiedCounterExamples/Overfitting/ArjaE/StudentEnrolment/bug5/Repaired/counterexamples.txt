


/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:336: warning: The prover cannot establish an assertion (Precondition: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:275: ) in method enrollmentProcess
		pay(payment, debit);
		   ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:275: warning: Associated declaration: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:336: 
    public void pay(int payment, boolean debit) 
                ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:261: warning: Precondition conjunct is false: debit
      @   	requires debit;
          	         ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:271: warning: Precondition conjunct is false: validPayment(_payment)
      @   	requires validPayment(_payment);
          	                     ^

TRACE of ArjaE.StudentEnrolment.bug5.Repaired.StudentEnrollment.enrollmentProcess(int,int,int,int,boolean,boolean,boolean)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 2
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:285:  	requires !(initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)) || !(0 <= passedCredits && passedCredits <= totalCredits) || !(0 <= semesterCredits && semesterCredits <= maxSemesterCredits); 
			VALUE: initialBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 4240
			VALUE: initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === true
			VALUE: (initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
			VALUE: !(initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6))	 === false
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
			VALUE: (0 <= passedCredits && passedCredits <= totalCredits)	 === false
			VALUE: !(0 <= passedCredits && passedCredits <= totalCredits)	 === true
			VALUE: !(initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)) || !(0 <= passedCredits && passedCredits <= totalCredits)	 === true
			VALUE: !(initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)) || !(0 <= passedCredits && passedCredits <= totalCredits) || !(0 <= semesterCredits && semesterCredits <= maxSemesterCredits)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:292:  	old int latePerCredit = (costPerCredit / 100) * 6
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:293:  	old int penalty = (payment / 100) * 2
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:294:  	old int _payment = payment - penalty
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:295:  	requires 0 < payment; 
			VALUE: 0	 === 0
			VALUE: payment	 === ( - 2147483600 )
			VALUE: 0 < payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:296:  	requires passedCredits + semesterCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: semesterCredits	 === 19
			VALUE: passedCredits + semesterCredits	 === 140
			VALUE: totalCredits	 === 120
			VALUE: passedCredits + semesterCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:297:  	requires initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6); 
			VALUE: initialBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 4240
			VALUE: initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:298:  	requires 0 <= semesterCredits && semesterCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: semesterCredits	 === 19
			VALUE: 0 <= semesterCredits	 === true
			VALUE: semesterCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: semesterCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= semesterCredits && semesterCredits <= maxSemesterCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:299:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:300:  	requires lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: initialBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: initialBalance + maxSemesterCredits * costPerCredit	 === 4001
			VALUE: maxSemesterCredits	 === 20
			VALUE: latePerCredit	 === 12
			VALUE: maxSemesterCredits * latePerCredit	 === 240
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit	 === 4241
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === true
			VALUE: lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:301:  	requires !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: !lateRegistration	 === false
			VALUE: !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:302:  	requires debit ==> Integer.MIN_VALUE <= initialBalance - payment; 
			VALUE: debit	 === false
			VALUE: debit ==> Integer.MIN_VALUE <= initialBalance - payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:303:  	requires !debit ==> Integer.MIN_VALUE <= initialBalance - _payment; 
			VALUE: debit	 === false
			VALUE: !debit	 === true
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: initialBalance	 === 1
			VALUE: _payment	 === ( - 2104533928 )
			VALUE: initialBalance - _payment	 === 2104533929
			VALUE: Integer.MIN_VALUE <= initialBalance - _payment	 === true
			VALUE: !debit ==> Integer.MIN_VALUE <= initialBalance - _payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:305:  	requires !lateRegistration && option && initialBalance <= 0; 
			VALUE: lateRegistration	 === true
			VALUE: !lateRegistration	 === false
			VALUE: !lateRegistration && option	 === false
			VALUE: !lateRegistration && option && initialBalance <= 0	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:295:  	requires 0 < payment; 
			VALUE: 0	 === 0
			VALUE: payment	 === ( - 2147483600 )
			VALUE: 0 < payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:296:  	requires passedCredits + semesterCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: semesterCredits	 === 19
			VALUE: passedCredits + semesterCredits	 === 140
			VALUE: totalCredits	 === 120
			VALUE: passedCredits + semesterCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:297:  	requires initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6); 
			VALUE: initialBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 4240
			VALUE: initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:298:  	requires 0 <= semesterCredits && semesterCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: semesterCredits	 === 19
			VALUE: 0 <= semesterCredits	 === true
			VALUE: semesterCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: semesterCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= semesterCredits && semesterCredits <= maxSemesterCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:299:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:300:  	requires lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: initialBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: initialBalance + maxSemesterCredits * costPerCredit	 === 4001
			VALUE: maxSemesterCredits	 === 20
			VALUE: latePerCredit	 === 12
			VALUE: maxSemesterCredits * latePerCredit	 === 240
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit	 === 4241
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === true
			VALUE: lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:301:  	requires !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: !lateRegistration	 === false
			VALUE: !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:302:  	requires debit ==> Integer.MIN_VALUE <= initialBalance - payment; 
			VALUE: debit	 === false
			VALUE: debit ==> Integer.MIN_VALUE <= initialBalance - payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:303:  	requires !debit ==> Integer.MIN_VALUE <= initialBalance - _payment; 
			VALUE: debit	 === false
			VALUE: !debit	 === true
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: initialBalance	 === 1
			VALUE: _payment	 === ( - 2104533928 )
			VALUE: initialBalance - _payment	 === 2104533929
			VALUE: Integer.MIN_VALUE <= initialBalance - _payment	 === true
			VALUE: !debit ==> Integer.MIN_VALUE <= initialBalance - _payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:310:  	requires lateRegistration && option && initialBalance <= 0; 
			VALUE: lateRegistration	 === true
			VALUE: option	 === false
			VALUE: lateRegistration && option	 === false
			VALUE: lateRegistration && option && initialBalance <= 0	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:295:  	requires 0 < payment; 
			VALUE: 0	 === 0
			VALUE: payment	 === ( - 2147483600 )
			VALUE: 0 < payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:296:  	requires passedCredits + semesterCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: semesterCredits	 === 19
			VALUE: passedCredits + semesterCredits	 === 140
			VALUE: totalCredits	 === 120
			VALUE: passedCredits + semesterCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:297:  	requires initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6); 
			VALUE: initialBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 4240
			VALUE: initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:298:  	requires 0 <= semesterCredits && semesterCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: semesterCredits	 === 19
			VALUE: 0 <= semesterCredits	 === true
			VALUE: semesterCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: semesterCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= semesterCredits && semesterCredits <= maxSemesterCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:299:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:300:  	requires lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: initialBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: initialBalance + maxSemesterCredits * costPerCredit	 === 4001
			VALUE: maxSemesterCredits	 === 20
			VALUE: latePerCredit	 === 12
			VALUE: maxSemesterCredits * latePerCredit	 === 240
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit	 === 4241
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === true
			VALUE: lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:301:  	requires !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: !lateRegistration	 === false
			VALUE: !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:302:  	requires debit ==> Integer.MIN_VALUE <= initialBalance - payment; 
			VALUE: debit	 === false
			VALUE: debit ==> Integer.MIN_VALUE <= initialBalance - payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:303:  	requires !debit ==> Integer.MIN_VALUE <= initialBalance - _payment; 
			VALUE: debit	 === false
			VALUE: !debit	 === true
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: initialBalance	 === 1
			VALUE: _payment	 === ( - 2104533928 )
			VALUE: initialBalance - _payment	 === 2104533929
			VALUE: Integer.MIN_VALUE <= initialBalance - _payment	 === true
			VALUE: !debit ==> Integer.MIN_VALUE <= initialBalance - _payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:315:  	requires debit && validPayment(payment) && !option; 
			VALUE: debit	 === false
			VALUE: debit && validPayment(payment)	 === false
			VALUE: debit && validPayment(payment) && !option	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:295:  	requires 0 < payment; 
			VALUE: 0	 === 0
			VALUE: payment	 === ( - 2147483600 )
			VALUE: 0 < payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:296:  	requires passedCredits + semesterCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: semesterCredits	 === 19
			VALUE: passedCredits + semesterCredits	 === 140
			VALUE: totalCredits	 === 120
			VALUE: passedCredits + semesterCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:297:  	requires initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6); 
			VALUE: initialBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 4240
			VALUE: initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:298:  	requires 0 <= semesterCredits && semesterCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: semesterCredits	 === 19
			VALUE: 0 <= semesterCredits	 === true
			VALUE: semesterCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: semesterCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= semesterCredits && semesterCredits <= maxSemesterCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:299:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:300:  	requires lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: initialBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: initialBalance + maxSemesterCredits * costPerCredit	 === 4001
			VALUE: maxSemesterCredits	 === 20
			VALUE: latePerCredit	 === 12
			VALUE: maxSemesterCredits * latePerCredit	 === 240
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit	 === 4241
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === true
			VALUE: lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:301:  	requires !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: !lateRegistration	 === false
			VALUE: !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:302:  	requires debit ==> Integer.MIN_VALUE <= initialBalance - payment; 
			VALUE: debit	 === false
			VALUE: debit ==> Integer.MIN_VALUE <= initialBalance - payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:303:  	requires !debit ==> Integer.MIN_VALUE <= initialBalance - _payment; 
			VALUE: debit	 === false
			VALUE: !debit	 === true
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: initialBalance	 === 1
			VALUE: _payment	 === ( - 2104533928 )
			VALUE: initialBalance - _payment	 === 2104533929
			VALUE: Integer.MIN_VALUE <= initialBalance - _payment	 === true
			VALUE: !debit ==> Integer.MIN_VALUE <= initialBalance - _payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:318:  	requires !debit && validPayment(_payment) && !option; 
			VALUE: debit	 === false
			VALUE: !debit	 === true
			VALUE: _payment	 === ( - 2104533928 )
			VALUE: validPayment(_payment)	 === false
			VALUE: !debit && validPayment(_payment)	 === false
			VALUE: !debit && validPayment(_payment) && !option	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:323:  	this.enrollmentCredits = enrollmentCredits
			VALUE: enrollmentCredits	 === 20
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:324:  	/*@ non_null */  String familyName = getLastName()
			VALUE: getLastName()	 === REF!val!25
			VALUE: familyName	 === REF!val!25
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_5897
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 2
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp5914
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_5918
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 2
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp5935
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__540
			VALUE: _$CPRE__540	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 2
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:21:  	//@ public final invariant charArray != null; 
			VALUE: charArray	 === REF!val!24
			VALUE: null	 === NULL
			VALUE: charArray != null	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	UndefinedNullDeReference assertion: `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:130:  	UndefinedNullDeReference assertion: !(_JML__tmp5963 != null) || _JML__tmp5964 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:61:  	requires this == obj; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:63:  	requires obj != null && \typeof(this) == \type(Object); 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:69:  	requires obj == null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires anObject != null && (anObject instanceof String); 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires !(anObject instanceof String); 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:61:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__541
			VALUE: _$CPRE__541	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:21:  	//@ public final invariant charArray != null; 
			VALUE: charArray	 === REF!val!24
			VALUE: null	 === NULL
			VALUE: charArray != null	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s2 != null & s1 != null; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1.charArray != null & s2.charArray != null; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1 == s2; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1 == null || s2 == null || (java.lang.String.isInterned(s1) && java.lang.String.isInterned(s2)); 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__547
			VALUE: _$CPRE__547	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__542
			VALUE: _$CPRE__542	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires a != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires b != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__549
			VALUE: _$CPRE__549	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:324:  	PossiblyNullInitialization assertion: _JML__tmp5936 != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:325:  	/*@ non_null */  String firstName = getFirstName()
			VALUE: getFirstName()	 === REF!val!29
			VALUE: firstName	 === REF!val!29
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_6144
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 2
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp6161
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_6165
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 2
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp6182
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__551
			VALUE: _$CPRE__551	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 2
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:21:  	//@ public final invariant charArray != null; 
			VALUE: charArray	 === REF!val!28
			VALUE: null	 === NULL
			VALUE: charArray != null	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	UndefinedNullDeReference assertion: `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:123:  	UndefinedNullDeReference assertion: !(_JML__tmp6210 != null) || _JML__tmp6211 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:61:  	requires this == obj; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:63:  	requires obj != null && \typeof(this) == \type(Object); 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:69:  	requires obj == null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires anObject != null && (anObject instanceof String); 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires !(anObject instanceof String); 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:61:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__552
			VALUE: _$CPRE__552	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:21:  	//@ public final invariant charArray != null; 
			VALUE: charArray	 === REF!val!28
			VALUE: null	 === NULL
			VALUE: charArray != null	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s2 != null & s1 != null; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1.charArray != null & s2.charArray != null; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1 == s2; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1 == null || s2 == null || (java.lang.String.isInterned(s1) && java.lang.String.isInterned(s2)); 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__554
			VALUE: _$CPRE__554	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__553
			VALUE: _$CPRE__553	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires a != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires b != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__556
			VALUE: _$CPRE__556	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:36:  	UndefinedNullDeReference assertion: !(_JML__tmp6282 && _JML__tmp6276 != null && _JML__tmp6277 != null && _JML__tmp6276 != null) || _JML__tmp6276 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:36:  	UndefinedNullDeReference assertion: !(_JML__tmp6282 && _JML__tmp6276 != null && _JML__tmp6277 != null && _JML__tmp6276 != null && _JML__tmp6277 != null) || _JML__tmp6277 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:37:  	UndefinedNullDeReference assertion: !(_JML__tmp6282 && _JML__tmp6276 != null && _JML__tmp6277 != null && _JML__tmp6276 != null && _JML__tmp6277 != null && _JML__tmp6276 != null) || _JML__tmp6276 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:48:  	requires a != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:50:  	requires b != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires a != null && b != null && astart >= 0 && bstart >= 0 && len >= 0 && astart + len <= a.length && bstart + len <= b.length; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
			VALUE: 0	 === 0
			VALUE: 0	 === 0
			VALUE: 0	 === 0
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:42:  	UndefinedNullDeReference assertion: !(_JML__tmp6276 != null) || _JML__tmp6276 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:42:  	UndefinedNullDeReference assertion: !(_JML__tmp6277 != null) || _JML__tmp6277 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:42:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__557
			VALUE: _$CPRE__557	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:325:  	PossiblyNullInitialization assertion: _JML__tmp6183 != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:326:  	setTuitionBalance(initialBalance)
			VALUE: initialBalance	 === 1
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_6370
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 2
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp6387
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_6391
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 2
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp6408
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:31:  	requires tuitionBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6); 
			VALUE: 100	 === 100
			VALUE: 6	 === 6
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:36:  	requires maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6) < tuitionBalance; 
			VALUE: 100	 === 100
			VALUE: 6	 === 6
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:31:  	Precondition assertion: _$CPRE__558
			VALUE: _$CPRE__558	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Assignable assertion: _JML__tmp6443 || true
			VALUE: true	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:33:  	UndefinedNullDeReference assertion: !_JML__tmp6409 || `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:327:  	this.passedCredits = passedCredits
			VALUE: passedCredits	 === 121
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:328:  	setEnrollmentCredits(semesterCredits)
			VALUE: semesterCredits	 === 19
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_6541
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp6558
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_6562
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp6579
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:69:  	requires 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:74:  	requires enrollmentCredits < 0 || maxSemesterCredits < enrollmentCredits; 
			VALUE: 0	 === 0
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:69:  	Precondition assertion: _$CPRE__559
			VALUE: _$CPRE__559	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Assignable assertion: _JML__tmp6602 || true
			VALUE: true	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:71:  	UndefinedNullDeReference assertion: !_JML__tmp6580 || `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:329:  	setLateRegistration(lateRegistration)
			VALUE: lateRegistration	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_6686
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp6703
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_6707
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp6724
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__560
			VALUE: _$CPRE__560	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Assignable assertion: _JML__tmp6731 || true
			VALUE: true	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	UndefinedNullDeReference assertion: `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	if (option) ...
			VALUE: option	 === false
			VALUE: (option)	 === false
				Condition = false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:336:  	pay(payment, debit)
			VALUE: payment	 === ( - 2147483600 )
			VALUE: debit	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_7139
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp7156
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_7160
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp7177
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:261:  	requires debit; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:262:  	requires validPayment(payment); 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:263:  	requires Integer.MIN_VALUE <= tuitionBalance - payment; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:268:  	requires !debit; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:269:  	old int penalty = (payment / 100) * 2
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:270:  	old int _payment = payment - penalty
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:271:  	requires validPayment(_payment); 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__567
			VALUE: _$CPRE__567	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:272:  	requires Integer.MIN_VALUE <= tuitionBalance - _payment; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:263:  	Precondition assertion: _$CPRE__565
			VALUE: _$CPRE__565	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:336:  Invalid assertion (Precondition)
: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:275:  Associated location




/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:321: warning: The prover cannot establish an assertion (Postcondition: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:284: ) in method enrollmentProcess
    public void enrollmentProcess(int passedCredits, int semesterCredits, int payment, int initialBalance, boolean lateRegistration, boolean debit, boolean option) 
                ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:284: warning: Associated declaration: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:321: 
    /*@      public exceptional_behavior
                    ^

TRACE of ArjaE.StudentEnrolment.bug5.Repaired.StudentEnrollment.enrollmentProcess(int,int,int,int,boolean,boolean,boolean)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4239
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:285:  	requires !(initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)) || !(0 <= passedCredits && passedCredits <= totalCredits) || !(0 <= semesterCredits && semesterCredits <= maxSemesterCredits); 
			VALUE: initialBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 4240
			VALUE: initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === true
			VALUE: (initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
			VALUE: !(initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6))	 === false
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
			VALUE: (0 <= passedCredits && passedCredits <= totalCredits)	 === false
			VALUE: !(0 <= passedCredits && passedCredits <= totalCredits)	 === true
			VALUE: !(initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)) || !(0 <= passedCredits && passedCredits <= totalCredits)	 === true
			VALUE: !(initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)) || !(0 <= passedCredits && passedCredits <= totalCredits) || !(0 <= semesterCredits && semesterCredits <= maxSemesterCredits)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:292:  	old int latePerCredit = (costPerCredit / 100) * 6
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:293:  	old int penalty = (payment / 100) * 2
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:294:  	old int _payment = payment - penalty
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:295:  	requires 0 < payment; 
			VALUE: 0	 === 0
			VALUE: payment	 === 24600
			VALUE: 0 < payment	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:296:  	requires passedCredits + semesterCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: semesterCredits	 === 20
			VALUE: passedCredits + semesterCredits	 === 141
			VALUE: totalCredits	 === 120
			VALUE: passedCredits + semesterCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:297:  	requires initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6); 
			VALUE: initialBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 4240
			VALUE: initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:298:  	requires 0 <= semesterCredits && semesterCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: semesterCredits	 === 20
			VALUE: 0 <= semesterCredits	 === true
			VALUE: semesterCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: semesterCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= semesterCredits && semesterCredits <= maxSemesterCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:299:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:300:  	requires lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: initialBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: initialBalance + maxSemesterCredits * costPerCredit	 === 8240
			VALUE: maxSemesterCredits	 === 20
			VALUE: latePerCredit	 === 12
			VALUE: maxSemesterCredits * latePerCredit	 === 240
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit	 === 8480
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === true
			VALUE: lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:301:  	requires !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: !lateRegistration	 === false
			VALUE: !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:302:  	requires debit ==> Integer.MIN_VALUE <= initialBalance - payment; 
			VALUE: debit	 === false
			VALUE: debit ==> Integer.MIN_VALUE <= initialBalance - payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:303:  	requires !debit ==> Integer.MIN_VALUE <= initialBalance - _payment; 
			VALUE: debit	 === false
			VALUE: !debit	 === true
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: initialBalance	 === 4240
			VALUE: _payment	 === 24108
			VALUE: initialBalance - _payment	 === ( - 19868 )
			VALUE: Integer.MIN_VALUE <= initialBalance - _payment	 === true
			VALUE: !debit ==> Integer.MIN_VALUE <= initialBalance - _payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:305:  	requires !lateRegistration && option && initialBalance <= 0; 
			VALUE: lateRegistration	 === true
			VALUE: !lateRegistration	 === false
			VALUE: !lateRegistration && option	 === false
			VALUE: !lateRegistration && option && initialBalance <= 0	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:295:  	requires 0 < payment; 
			VALUE: 0	 === 0
			VALUE: payment	 === 24600
			VALUE: 0 < payment	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:296:  	requires passedCredits + semesterCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: semesterCredits	 === 20
			VALUE: passedCredits + semesterCredits	 === 141
			VALUE: totalCredits	 === 120
			VALUE: passedCredits + semesterCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:297:  	requires initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6); 
			VALUE: initialBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 4240
			VALUE: initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:298:  	requires 0 <= semesterCredits && semesterCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: semesterCredits	 === 20
			VALUE: 0 <= semesterCredits	 === true
			VALUE: semesterCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: semesterCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= semesterCredits && semesterCredits <= maxSemesterCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:299:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:300:  	requires lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: initialBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: initialBalance + maxSemesterCredits * costPerCredit	 === 8240
			VALUE: maxSemesterCredits	 === 20
			VALUE: latePerCredit	 === 12
			VALUE: maxSemesterCredits * latePerCredit	 === 240
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit	 === 8480
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === true
			VALUE: lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:301:  	requires !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: !lateRegistration	 === false
			VALUE: !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:302:  	requires debit ==> Integer.MIN_VALUE <= initialBalance - payment; 
			VALUE: debit	 === false
			VALUE: debit ==> Integer.MIN_VALUE <= initialBalance - payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:303:  	requires !debit ==> Integer.MIN_VALUE <= initialBalance - _payment; 
			VALUE: debit	 === false
			VALUE: !debit	 === true
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: initialBalance	 === 4240
			VALUE: _payment	 === 24108
			VALUE: initialBalance - _payment	 === ( - 19868 )
			VALUE: Integer.MIN_VALUE <= initialBalance - _payment	 === true
			VALUE: !debit ==> Integer.MIN_VALUE <= initialBalance - _payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:310:  	requires lateRegistration && option && initialBalance <= 0; 
			VALUE: lateRegistration	 === true
			VALUE: option	 === true
			VALUE: lateRegistration && option	 === false
			VALUE: lateRegistration && option && initialBalance <= 0	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:295:  	requires 0 < payment; 
			VALUE: 0	 === 0
			VALUE: payment	 === 24600
			VALUE: 0 < payment	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:296:  	requires passedCredits + semesterCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: semesterCredits	 === 20
			VALUE: passedCredits + semesterCredits	 === 141
			VALUE: totalCredits	 === 120
			VALUE: passedCredits + semesterCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:297:  	requires initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6); 
			VALUE: initialBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 4240
			VALUE: initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:298:  	requires 0 <= semesterCredits && semesterCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: semesterCredits	 === 20
			VALUE: 0 <= semesterCredits	 === true
			VALUE: semesterCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: semesterCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= semesterCredits && semesterCredits <= maxSemesterCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:299:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:300:  	requires lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: initialBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: initialBalance + maxSemesterCredits * costPerCredit	 === 8240
			VALUE: maxSemesterCredits	 === 20
			VALUE: latePerCredit	 === 12
			VALUE: maxSemesterCredits * latePerCredit	 === 240
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit	 === 8480
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === true
			VALUE: lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:301:  	requires !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: !lateRegistration	 === false
			VALUE: !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:302:  	requires debit ==> Integer.MIN_VALUE <= initialBalance - payment; 
			VALUE: debit	 === false
			VALUE: debit ==> Integer.MIN_VALUE <= initialBalance - payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:303:  	requires !debit ==> Integer.MIN_VALUE <= initialBalance - _payment; 
			VALUE: debit	 === false
			VALUE: !debit	 === true
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: initialBalance	 === 4240
			VALUE: _payment	 === 24108
			VALUE: initialBalance - _payment	 === ( - 19868 )
			VALUE: Integer.MIN_VALUE <= initialBalance - _payment	 === true
			VALUE: !debit ==> Integer.MIN_VALUE <= initialBalance - _payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:315:  	requires debit && validPayment(payment) && !option; 
			VALUE: debit	 === false
			VALUE: debit && validPayment(payment)	 === false
			VALUE: debit && validPayment(payment) && !option	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:295:  	requires 0 < payment; 
			VALUE: 0	 === 0
			VALUE: payment	 === 24600
			VALUE: 0 < payment	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:296:  	requires passedCredits + semesterCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: semesterCredits	 === 20
			VALUE: passedCredits + semesterCredits	 === 141
			VALUE: totalCredits	 === 120
			VALUE: passedCredits + semesterCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:297:  	requires initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6); 
			VALUE: initialBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 4240
			VALUE: initialBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6)	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:298:  	requires 0 <= semesterCredits && semesterCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: semesterCredits	 === 20
			VALUE: 0 <= semesterCredits	 === true
			VALUE: semesterCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: semesterCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= semesterCredits && semesterCredits <= maxSemesterCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:299:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:300:  	requires lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: initialBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: initialBalance + maxSemesterCredits * costPerCredit	 === 8240
			VALUE: maxSemesterCredits	 === 20
			VALUE: latePerCredit	 === 12
			VALUE: maxSemesterCredits * latePerCredit	 === 240
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit	 === 8480
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === true
			VALUE: lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit + maxSemesterCredits * latePerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:301:  	requires !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: lateRegistration	 === true
			VALUE: !lateRegistration	 === false
			VALUE: !lateRegistration ==> initialBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:302:  	requires debit ==> Integer.MIN_VALUE <= initialBalance - payment; 
			VALUE: debit	 === false
			VALUE: debit ==> Integer.MIN_VALUE <= initialBalance - payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:303:  	requires !debit ==> Integer.MIN_VALUE <= initialBalance - _payment; 
			VALUE: debit	 === false
			VALUE: !debit	 === true
			VALUE: Integer.MIN_VALUE	 === ( - 2147483648 )
			VALUE: initialBalance	 === 4240
			VALUE: _payment	 === 24108
			VALUE: initialBalance - _payment	 === ( - 19868 )
			VALUE: Integer.MIN_VALUE <= initialBalance - _payment	 === true
			VALUE: !debit ==> Integer.MIN_VALUE <= initialBalance - _payment	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:318:  	requires !debit && validPayment(_payment) && !option; 
			VALUE: debit	 === false
			VALUE: !debit	 === true
			VALUE: _payment	 === 24108
			VALUE: validPayment(_payment)	 === false
			VALUE: !debit && validPayment(_payment)	 === false
			VALUE: !debit && validPayment(_payment) && !option	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:323:  	this.enrollmentCredits = enrollmentCredits
			VALUE: enrollmentCredits	 === 19
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:324:  	/*@ non_null */  String familyName = getLastName()
			VALUE: getLastName()	 === REF!val!27
			VALUE: familyName	 === REF!val!27
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_5897
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4239
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp5914
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_5918
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4239
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp5935
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__540
			VALUE: _$CPRE__540	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4239
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:21:  	//@ public final invariant charArray != null; 
			VALUE: charArray	 === REF!val!29
			VALUE: null	 === NULL
			VALUE: charArray != null	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	UndefinedNullDeReference assertion: `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:130:  	UndefinedNullDeReference assertion: !(_JML__tmp5963 != null) || _JML__tmp5964 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:61:  	requires this == obj; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:63:  	requires obj != null && \typeof(this) == \type(Object); 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:69:  	requires obj == null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires anObject != null && (anObject instanceof String); 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires !(anObject instanceof String); 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:61:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__541
			VALUE: _$CPRE__541	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:21:  	//@ public final invariant charArray != null; 
			VALUE: charArray	 === REF!val!29
			VALUE: null	 === NULL
			VALUE: charArray != null	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s2 != null & s1 != null; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1.charArray != null & s2.charArray != null; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1 == s2; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1 == null || s2 == null || (java.lang.String.isInterned(s1) && java.lang.String.isInterned(s2)); 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__547
			VALUE: _$CPRE__547	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__542
			VALUE: _$CPRE__542	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires a != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires b != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__549
			VALUE: _$CPRE__549	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:36:  	UndefinedNullDeReference assertion: !(_JML__tmp6057 && _JML__tmp6051 != null && _JML__tmp6052 != null && _JML__tmp6051 != null) || _JML__tmp6051 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:36:  	UndefinedNullDeReference assertion: !(_JML__tmp6057 && _JML__tmp6051 != null && _JML__tmp6052 != null && _JML__tmp6051 != null && _JML__tmp6052 != null) || _JML__tmp6052 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:37:  	UndefinedNullDeReference assertion: !(_JML__tmp6057 && _JML__tmp6051 != null && _JML__tmp6052 != null && _JML__tmp6051 != null && _JML__tmp6052 != null && _JML__tmp6051 != null) || _JML__tmp6051 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:48:  	requires a != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:50:  	requires b != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires a != null && b != null && astart >= 0 && bstart >= 0 && len >= 0 && astart + len <= a.length && bstart + len <= b.length; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
			VALUE: 0	 === 0
			VALUE: 0	 === 0
			VALUE: 0	 === 0
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:42:  	UndefinedNullDeReference assertion: !(_JML__tmp6051 != null) || _JML__tmp6051 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:42:  	UndefinedNullDeReference assertion: !(_JML__tmp6052 != null) || _JML__tmp6052 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:42:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__550
			VALUE: _$CPRE__550	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:324:  	PossiblyNullInitialization assertion: _JML__tmp5936 != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:325:  	/*@ non_null */  String firstName = getFirstName()
			VALUE: getFirstName()	 === REF!val!32
			VALUE: firstName	 === REF!val!32
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_6144
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4239
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp6161
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_6165
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4239
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp6182
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__551
			VALUE: _$CPRE__551	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4239
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:21:  	//@ public final invariant charArray != null; 
			VALUE: charArray	 === REF!val!31
			VALUE: null	 === NULL
			VALUE: charArray != null	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	UndefinedNullDeReference assertion: `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:123:  	UndefinedNullDeReference assertion: !(_JML__tmp6210 != null) || _JML__tmp6211 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:61:  	requires this == obj; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:63:  	requires obj != null && \typeof(this) == \type(Object); 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:69:  	requires obj == null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires anObject != null && (anObject instanceof String); 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires !(anObject instanceof String); 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:61:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__552
			VALUE: _$CPRE__552	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:21:  	//@ public final invariant charArray != null; 
			VALUE: charArray	 === REF!val!31
			VALUE: null	 === NULL
			VALUE: charArray != null	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s2 != null & s1 != null; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1.charArray != null & s2.charArray != null; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1 == s2; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s1 == null || s2 == null || (java.lang.String.isInterned(s1) && java.lang.String.isInterned(s2)); 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__554
			VALUE: _$CPRE__554	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	requires s != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__555
			VALUE: _$CPRE__555	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:340:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__553
			VALUE: _$CPRE__553	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires a != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires b != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__556
			VALUE: _$CPRE__556	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:36:  	UndefinedNullDeReference assertion: !(_JML__tmp6282 && _JML__tmp6276 != null && _JML__tmp6277 != null && _JML__tmp6276 != null) || _JML__tmp6276 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:36:  	UndefinedNullDeReference assertion: !(_JML__tmp6282 && _JML__tmp6276 != null && _JML__tmp6277 != null && _JML__tmp6276 != null && _JML__tmp6277 != null) || _JML__tmp6277 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:37:  	UndefinedNullDeReference assertion: !(_JML__tmp6282 && _JML__tmp6276 != null && _JML__tmp6277 != null && _JML__tmp6276 != null && _JML__tmp6277 != null && _JML__tmp6276 != null) || _JML__tmp6276 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:48:  	requires a != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:50:  	requires b != null; 
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:39:  	requires a != null && b != null && astart >= 0 && bstart >= 0 && len >= 0 && astart + len <= a.length && bstart + len <= b.length; 
			VALUE: null	 === NULL
			VALUE: null	 === NULL
			VALUE: 0	 === 0
			VALUE: 0	 === 0
			VALUE: 0	 === 0
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:42:  	UndefinedNullDeReference assertion: !(_JML__tmp6276 != null) || _JML__tmp6276 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:42:  	UndefinedNullDeReference assertion: !(_JML__tmp6277 != null) || _JML__tmp6277 != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:42:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__557
			VALUE: _$CPRE__557	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:325:  	PossiblyNullInitialization assertion: _JML__tmp6183 != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:326:  	setTuitionBalance(initialBalance)
			VALUE: initialBalance	 === 4240
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_6370
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4239
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp6387
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_6391
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4239
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp6408
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:31:  	requires tuitionBalance <= maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6); 
			VALUE: 100	 === 100
			VALUE: 6	 === 6
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:36:  	requires maxSemesterCredits * costPerCredit + maxSemesterCredits * ((costPerCredit / 100) * 6) < tuitionBalance; 
			VALUE: 100	 === 100
			VALUE: 6	 === 6
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:31:  	Precondition assertion: _$CPRE__558
			VALUE: _$CPRE__558	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Assignable assertion: _JML__tmp6443 || true
			VALUE: true	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:33:  	UndefinedNullDeReference assertion: !_JML__tmp6409 || `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:327:  	this.passedCredits = passedCredits
			VALUE: passedCredits	 === 121
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:328:  	setEnrollmentCredits(semesterCredits)
			VALUE: semesterCredits	 === 20
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_6541
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp6558
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 19
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 19
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_6562
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp6579
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:69:  	requires 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:74:  	requires enrollmentCredits < 0 || maxSemesterCredits < enrollmentCredits; 
			VALUE: 0	 === 0
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:69:  	Precondition assertion: _$CPRE__559
			VALUE: _$CPRE__559	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Assignable assertion: _JML__tmp6602 || true
			VALUE: true	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:71:  	UndefinedNullDeReference assertion: !_JML__tmp6580 || `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:329:  	setLateRegistration(lateRegistration)
			VALUE: lateRegistration	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_6686
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp6703
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_6707
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp6724
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__560
			VALUE: _$CPRE__560	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Assignable assertion: _JML__tmp6731 || true
			VALUE: true	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	UndefinedNullDeReference assertion: `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	if (option) ...
			VALUE: option	 === true
			VALUE: (option)	 === true
				Condition = true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	if (registrationPermission()) ...
			VALUE: registrationPermission()	 === false
			VALUE: (registrationPermission())	 === false
				Condition = false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: `conditionalResult_6800
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantLeaveCaller assertion: _JML__tmp6817
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: `conditionalResult_6821
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantEntrance assertion: _JML__tmp6838
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__561
			VALUE: _$CPRE__561	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantExit assertion: `conditionalResult_7387
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4240
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantExit assertion: _JML__tmp7404
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:8:  	NullField assertion: _JML__tmp7428
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:9:  	NullField assertion: _JML__tmp7432
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	ensures false; 
			VALUE: false	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:321:  Invalid assertion (Postcondition)
: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:284:  Associated location


/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:62: warning: The prover cannot establish an assertion (Assignable: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:57: ) in method setPassedCredits:  this.passedCredits
            this.passedCredits = passedCredits;
                               ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:57: warning: Associated declaration: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:62: 
      @   	assignable \nothing;
          	^

TRACE of ArjaE.StudentEnrolment.bug5.Repaired.StudentEnrollment.setPassedCredits(int)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 16
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 16
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147474793 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:51:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === ( - 1 )
			VALUE: 0 <= passedCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:56:  	requires passedCredits < 0 || totalCredits < passedCredits; 
			VALUE: passedCredits	 === ( - 1 )
			VALUE: 0	 === 0
			VALUE: passedCredits < 0	 === true
			VALUE: passedCredits < 0 || totalCredits < passedCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	if (0 > passedCredits && passedCredits <= totalCredits) ...
			VALUE: 0	 === 0
			VALUE: passedCredits	 === ( - 1 )
			VALUE: 0 > passedCredits	 === true
			VALUE: passedCredits	 === ( - 1 )
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === true
			VALUE: 0 > passedCredits && passedCredits <= totalCredits	 === true
			VALUE: (0 > passedCredits && passedCredits <= totalCredits)	 === true
				Condition = true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:62:  	this.passedCredits = passedCredits
			VALUE: passedCredits	 === ( - 1 )
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:62:  	Assignable assertion: _JML__tmp758 || (!Pre_5 || _JML__tmp757.`alloc__ > 0)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:62:  Invalid assertion (Assignable)
: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:57:  Associated location


/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:59: warning: The prover cannot establish an assertion (Postcondition: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:55: ) in method setPassedCredits
    public void setPassedCredits(int passedCredits)
                ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:55: warning: Associated declaration: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:59: 
      @      public exceptional_behavior
                    ^

TRACE of ArjaE.StudentEnrolment.bug5.Repaired.StudentEnrollment.setPassedCredits(int)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 6
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 6
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147482325 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:51:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === ( - 1 )
			VALUE: 0 <= passedCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:56:  	requires passedCredits < 0 || totalCredits < passedCredits; 
			VALUE: passedCredits	 === ( - 1 )
			VALUE: 0	 === 0
			VALUE: passedCredits < 0	 === true
			VALUE: passedCredits < 0 || totalCredits < passedCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	if (0 > passedCredits && passedCredits <= totalCredits) ...
			VALUE: 0	 === 0
			VALUE: passedCredits	 === ( - 1 )
			VALUE: 0 > passedCredits	 === true
			VALUE: passedCredits	 === ( - 1 )
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === true
			VALUE: 0 > passedCredits && passedCredits <= totalCredits	 === true
			VALUE: (0 > passedCredits && passedCredits <= totalCredits)	 === true
				Condition = true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:62:  	this.passedCredits = passedCredits
			VALUE: passedCredits	 === ( - 1 )
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:62:  	Assignable assertion: _JML__tmp758 || (!Pre_5 || _JML__tmp757.`alloc__ > 0)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 6
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 6
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantExit assertion: `conditionalResult_792
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147482325 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantExit assertion: _JML__tmp809
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:8:  	NullField assertion: _JML__tmp833
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:9:  	NullField assertion: _JML__tmp837
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	ensures false; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:59:  Invalid assertion (Postcondition)
: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:55:  Associated location

/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:64: warning: The prover cannot establish an assertion (ExceptionalPostcondition: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:50: ) in method setPassedCredits
            throw new IllegalArgumentException();
            ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:50: warning: Associated declaration: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:64: 
    /*@      public normal_behavior
                    ^

TRACE of ArjaE.StudentEnrolment.bug5.Repaired.StudentEnrollment.setPassedCredits(int)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147476070 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:51:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 74
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 74
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === true
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:56:  	requires passedCredits < 0 || totalCredits < passedCredits; 
			VALUE: passedCredits	 === 74
			VALUE: 0	 === 0
			VALUE: passedCredits < 0	 === false
			VALUE: totalCredits	 === 120
			VALUE: passedCredits	 === 74
			VALUE: totalCredits < passedCredits	 === false
			VALUE: passedCredits < 0 || totalCredits < passedCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	if (0 > passedCredits && passedCredits <= totalCredits) ...
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 74
			VALUE: 0 > passedCredits	 === false
			VALUE: 0 > passedCredits && passedCredits <= totalCredits	 === false
			VALUE: (0 > passedCredits && passedCredits <= totalCredits)	 === false
				Condition = false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:64:  	throw new IllegalArgumentException();
			VALUE: new IllegalArgumentException()	 === REF!val!38
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__89
			VALUE: _$CPRE__89	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__90
			VALUE: _$CPRE__90	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:52:  	UndefinedNullDeReference assertion: !(_JML__tmp762._throwables != null) || _JML__tmp762._throwables != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 14
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 14
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:12:  	InvariantExceptionExit assertion: `conditionalResult_813
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147476070 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:14:  	InvariantExceptionExit assertion: _JML__tmp830
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:50:  	Terminated with exception
			VALUE: `exception	 === REF!val!38
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:1:  	signals () false; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:50:  	ExceptionalPostcondition assertion: !Pre_4 || false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:64:  Invalid assertion (ExceptionalPostcondition)
: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug5/Repaired/StudentEnrollment.java:50:  Associated location

12 warnings
