/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:170: warning: The prover cannot establish an assertion (Precondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:83: ) in method checkWithdrawal
		if (!isValid(previousTransaction,amount)) {//if (isValid(amount)) {
		            ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:83: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:170: 
	/*@ spec_public pure @*/ boolean isValid(int _balance, int _amount)
	                                 ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72: warning: Precondition conjunct is false: isValid(_amount)
	//@ requires isValid(_amount);
	                    ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80: warning: Precondition conjunct is false: _balance - _amount < 0
	  //@ requires _balance - _amount < 0;
	                                  ^

TRACE of BankAccount.checkWithdrawal(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:139:  	requires isValid(amount); 
			VALUE: amount	 === ( - 2147483648 )
			VALUE: isValid(amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp483
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp486
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__18
			VALUE: _$CPRE__18	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:140:  	requires isValid(balance, amount); 
			VALUE: balance	 === 1
			VALUE: amount	 === ( - 2147483648 )
			VALUE: isValid(balance, amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:147:  	requires isValid(amount); 
			VALUE: amount	 === ( - 2147483648 )
			VALUE: isValid(amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp537
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__21
			VALUE: _$CPRE__21	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:148:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 1
			VALUE: amount	 === ( - 2147483648 )
			VALUE: isValid(balance, amount)	 === false
			VALUE: !isValid(balance, amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:149:  	requires isValid(balance, 50); 
			VALUE: balance	 === 1
			VALUE: isValid(balance, 50)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:156:  	requires isValid(amount); 
			VALUE: amount	 === ( - 2147483648 )
			VALUE: isValid(amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp621
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__26
			VALUE: _$CPRE__26	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:157:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 1
			VALUE: amount	 === ( - 2147483648 )
			VALUE: isValid(balance, amount)	 === false
			VALUE: !isValid(balance, amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:158:  	requires !isValid(balance, 50); 
			VALUE: balance	 === 1
			VALUE: isValid(balance, 50)	 === false
			VALUE: !isValid(balance, 50)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:165:  	requires !isValid(amount); 
			VALUE: amount	 === ( - 2147483648 )
			VALUE: isValid(amount)	 === false
			VALUE: !isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp706
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__31
			VALUE: _$CPRE__31	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	if (!isValid(previousTransaction, amount)) ...
			VALUE: previousTransaction	 === ( - 2147481852 )
			VALUE: amount	 === ( - 2147483648 )
			VALUE: isValid(previousTransaction, amount)	 === false
			VALUE: !isValid(previousTransaction, amount)	 === true
			VALUE: (!isValid(previousTransaction, amount))	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp724
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp727
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp732
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__33
			VALUE: _$CPRE__33	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	Precondition assertion: _$CPRE__32
			VALUE: _$CPRE__32	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:170:  Invalid assertion (Precondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:83:  Associated location

/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168: warning: The prover cannot establish an assertion (Postcondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:160: ) in method checkWithdrawal
	void checkWithdrawal(int amount)
	     ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:160: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168: 
	//@ ensures balance == 0;
	    ^

TRACE of BankAccount.checkWithdrawal(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:139:  	requires isValid(amount); 
			VALUE: amount	 === 2147483038
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp483
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp486
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__18
			VALUE: _$CPRE__18	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:140:  	requires isValid(balance, amount); 
			VALUE: balance	 === 1
			VALUE: amount	 === 2147483038
			VALUE: isValid(balance, amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp504
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp509
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__20
			VALUE: _$CPRE__20	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__19
			VALUE: _$CPRE__19	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:147:  	requires isValid(amount); 
			VALUE: amount	 === 2147483038
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp537
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__21
			VALUE: _$CPRE__21	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:148:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 1
			VALUE: amount	 === 2147483038
			VALUE: isValid(balance, amount)	 === false
			VALUE: !isValid(balance, amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp555
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp560
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__23
			VALUE: _$CPRE__23	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__22
			VALUE: _$CPRE__22	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:149:  	requires isValid(balance, 50); 
			VALUE: balance	 === 1
			VALUE: isValid(balance, 50)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp591
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp596
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__25
			VALUE: _$CPRE__25	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__24
			VALUE: _$CPRE__24	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:156:  	requires isValid(amount); 
			VALUE: amount	 === 2147483038
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp621
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__26
			VALUE: _$CPRE__26	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:157:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 1
			VALUE: amount	 === 2147483038
			VALUE: isValid(balance, amount)	 === false
			VALUE: !isValid(balance, amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp639
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp644
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__28
			VALUE: _$CPRE__28	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__27
			VALUE: _$CPRE__27	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:158:  	requires !isValid(balance, 50); 
			VALUE: balance	 === 1
			VALUE: isValid(balance, 50)	 === false
			VALUE: !isValid(balance, 50)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp675
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp680
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__30
			VALUE: _$CPRE__30	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__29
			VALUE: _$CPRE__29	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:165:  	requires !isValid(amount); 
			VALUE: amount	 === 2147483038
			VALUE: isValid(amount)	 === true
			VALUE: !isValid(amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp706
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__31
			VALUE: _$CPRE__31	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	if (!isValid(previousTransaction, amount)) ...
			VALUE: previousTransaction	 === 2147483038
			VALUE: amount	 === 2147483038
			VALUE: isValid(previousTransaction, amount)	 === true
			VALUE: !isValid(previousTransaction, amount)	 === false
			VALUE: (!isValid(previousTransaction, amount))	 === false
				Condition = false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp724
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp727
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp732
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__33
			VALUE: _$CPRE__33	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	Precondition assertion: _$CPRE__32
			VALUE: _$CPRE__32	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 1
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantExit assertion: _JML__tmp861
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:160:  	ensures balance == 0; 
			VALUE: balance	 === 1
			VALUE: balance == 0	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168:  Invalid assertion (Postcondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:160:  Associated location

/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168: warning: The prover cannot establish an assertion (Postcondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:161: ) in method checkWithdrawal
	void checkWithdrawal(int amount)
	     ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:161: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168: 
	//@ ensures previousTransaction == \old (-balance);
	    ^

TRACE of BankAccount.checkWithdrawal(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:139:  	requires isValid(amount); 
			VALUE: amount	 === 2147475549
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp483
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp486
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__18
			VALUE: _$CPRE__18	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:140:  	requires isValid(balance, amount); 
			VALUE: balance	 === 0
			VALUE: amount	 === 2147475549
			VALUE: isValid(balance, amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp504
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp509
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__20
			VALUE: _$CPRE__20	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__19
			VALUE: _$CPRE__19	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:147:  	requires isValid(amount); 
			VALUE: amount	 === 2147475549
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp537
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__21
			VALUE: _$CPRE__21	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:148:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 0
			VALUE: amount	 === 2147475549
			VALUE: isValid(balance, amount)	 === false
			VALUE: !isValid(balance, amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp555
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp560
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__23
			VALUE: _$CPRE__23	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__22
			VALUE: _$CPRE__22	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:149:  	requires isValid(balance, 50); 
			VALUE: balance	 === 0
			VALUE: isValid(balance, 50)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp591
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp596
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__25
			VALUE: _$CPRE__25	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__24
			VALUE: _$CPRE__24	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:156:  	requires isValid(amount); 
			VALUE: amount	 === 2147475549
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp621
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__26
			VALUE: _$CPRE__26	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:157:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 0
			VALUE: amount	 === 2147475549
			VALUE: isValid(balance, amount)	 === false
			VALUE: !isValid(balance, amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp639
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp644
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__28
			VALUE: _$CPRE__28	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__27
			VALUE: _$CPRE__27	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:158:  	requires !isValid(balance, 50); 
			VALUE: balance	 === 0
			VALUE: isValid(balance, 50)	 === false
			VALUE: !isValid(balance, 50)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp675
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp680
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__30
			VALUE: _$CPRE__30	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__29
			VALUE: _$CPRE__29	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:165:  	requires !isValid(amount); 
			VALUE: amount	 === 2147475549
			VALUE: isValid(amount)	 === true
			VALUE: !isValid(amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp706
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__31
			VALUE: _$CPRE__31	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	if (!isValid(previousTransaction, amount)) ...
			VALUE: previousTransaction	 === 2147475549
			VALUE: amount	 === 2147475549
			VALUE: isValid(previousTransaction, amount)	 === true
			VALUE: !isValid(previousTransaction, amount)	 === false
			VALUE: (!isValid(previousTransaction, amount))	 === false
				Condition = false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp724
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp727
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp732
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__33
			VALUE: _$CPRE__33	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	Precondition assertion: _$CPRE__32
			VALUE: _$CPRE__32	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 0
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantExit assertion: _JML__tmp861
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:160:  	ensures balance == 0; 
			VALUE: balance	 === 0
			VALUE: balance == 0	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:161:  	ensures previousTransaction == \old(-balance); 
			VALUE: previousTransaction	 === 2147475549
			VALUE: balance	 === 0
			VALUE: -balance	 === 0
			VALUE: \old(-balance)	 === 0
			VALUE: previousTransaction == \old(-balance)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168:  Invalid assertion (Postcondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:161:  Associated location

/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168: warning: The prover cannot establish an assertion (Postcondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:151: ) in method checkWithdrawal
	void checkWithdrawal(int amount)
	     ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:151: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168: 
	//@ ensures balance == \old (balance) - 50;
	    ^

TRACE of BankAccount.checkWithdrawal(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:139:  	requires isValid(amount); 
			VALUE: amount	 === 2147482505
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp483
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp486
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__18
			VALUE: _$CPRE__18	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:140:  	requires isValid(balance, amount); 
			VALUE: balance	 === 51
			VALUE: amount	 === 2147482505
			VALUE: isValid(balance, amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp504
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp509
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__20
			VALUE: _$CPRE__20	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__19
			VALUE: _$CPRE__19	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:147:  	requires isValid(amount); 
			VALUE: amount	 === 2147482505
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp537
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__21
			VALUE: _$CPRE__21	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:148:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 51
			VALUE: amount	 === 2147482505
			VALUE: isValid(balance, amount)	 === false
			VALUE: !isValid(balance, amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp555
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp560
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__23
			VALUE: _$CPRE__23	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__22
			VALUE: _$CPRE__22	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:149:  	requires isValid(balance, 50); 
			VALUE: balance	 === 51
			VALUE: isValid(balance, 50)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp591
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp596
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__25
			VALUE: _$CPRE__25	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__24
			VALUE: _$CPRE__24	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:156:  	requires isValid(amount); 
			VALUE: amount	 === 2147482505
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp621
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__26
			VALUE: _$CPRE__26	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:157:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 51
			VALUE: amount	 === 2147482505
			VALUE: isValid(balance, amount)	 === false
			VALUE: !isValid(balance, amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp639
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp644
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__28
			VALUE: _$CPRE__28	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__27
			VALUE: _$CPRE__27	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:158:  	requires !isValid(balance, 50); 
			VALUE: balance	 === 51
			VALUE: isValid(balance, 50)	 === true
			VALUE: !isValid(balance, 50)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp675
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp680
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__30
			VALUE: _$CPRE__30	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__29
			VALUE: _$CPRE__29	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:165:  	requires !isValid(amount); 
			VALUE: amount	 === 2147482505
			VALUE: isValid(amount)	 === true
			VALUE: !isValid(amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp706
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__31
			VALUE: _$CPRE__31	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	if (!isValid(previousTransaction, amount)) ...
			VALUE: previousTransaction	 === 2147482505
			VALUE: amount	 === 2147482505
			VALUE: isValid(previousTransaction, amount)	 === true
			VALUE: !isValid(previousTransaction, amount)	 === false
			VALUE: (!isValid(previousTransaction, amount))	 === false
				Condition = false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp724
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp727
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp732
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__33
			VALUE: _$CPRE__33	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	Precondition assertion: _$CPRE__32
			VALUE: _$CPRE__32	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 51
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantExit assertion: _JML__tmp861
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:151:  	ensures balance == \old(balance) - 50; 
			VALUE: balance	 === 51
			VALUE: balance	 === 51
			VALUE: \old(balance)	 === 51
			VALUE: \old(balance) - 50	 === 1
			VALUE: balance == \old(balance) - 50	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168:  Invalid assertion (Postcondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:151:  Associated location


/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168: warning: The prover cannot establish an assertion (Postcondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:142: ) in method checkWithdrawal
	void checkWithdrawal(int amount)
	     ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:142: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168: 
	//@ ensures balance == \old (balance) - amount;
	    ^

TRACE of BankAccount.checkWithdrawal(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:139:  	requires isValid(amount); 
			VALUE: amount	 === 5988
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp483
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp486
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__18
			VALUE: _$CPRE__18	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:140:  	requires isValid(balance, amount); 
			VALUE: balance	 === 8985
			VALUE: amount	 === 5988
			VALUE: isValid(balance, amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp504
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp509
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__20
			VALUE: _$CPRE__20	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__19
			VALUE: _$CPRE__19	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:147:  	requires isValid(amount); 
			VALUE: amount	 === 5988
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp537
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__21
			VALUE: _$CPRE__21	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:148:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 8985
			VALUE: amount	 === 5988
			VALUE: isValid(balance, amount)	 === true
			VALUE: !isValid(balance, amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp555
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp560
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__23
			VALUE: _$CPRE__23	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__22
			VALUE: _$CPRE__22	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:149:  	requires isValid(balance, 50); 
			VALUE: balance	 === 8985
			VALUE: isValid(balance, 50)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:156:  	requires isValid(amount); 
			VALUE: amount	 === 5988
			VALUE: isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp621
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__26
			VALUE: _$CPRE__26	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:157:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 8985
			VALUE: amount	 === 5988
			VALUE: isValid(balance, amount)	 === true
			VALUE: !isValid(balance, amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp639
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp644
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__28
			VALUE: _$CPRE__28	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__27
			VALUE: _$CPRE__27	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:158:  	requires !isValid(balance, 50); 
			VALUE: balance	 === 8985
			VALUE: isValid(balance, 50)	 === false
			VALUE: !isValid(balance, 50)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:165:  	requires !isValid(amount); 
			VALUE: amount	 === 5988
			VALUE: isValid(amount)	 === true
			VALUE: !isValid(amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp706
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__31
			VALUE: _$CPRE__31	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	if (!isValid(previousTransaction, amount)) ...
			VALUE: previousTransaction	 === 36
			VALUE: amount	 === 5988
			VALUE: isValid(previousTransaction, amount)	 === false
			VALUE: !isValid(previousTransaction, amount)	 === true
			VALUE: (!isValid(previousTransaction, amount))	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp724
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp727
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp732
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__33
			VALUE: _$CPRE__33	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	Precondition assertion: _$CPRE__32
			VALUE: _$CPRE__32	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	if (isValid(balance, amount)) ...
			VALUE: balance	 === 8985
			VALUE: amount	 === 5988
			VALUE: isValid(balance, amount)	 === true
			VALUE: (isValid(balance, amount))	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp766
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp769
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp774
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__35
			VALUE: _$CPRE__35	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	Precondition assertion: _$CPRE__34
			VALUE: _$CPRE__34	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:172:  	previousTransaction = -amount
			VALUE: amount	 === 5988
			VALUE: -amount	 === ( - 5988 )
			VALUE: previousTransaction = -amount	 === ( - 5988 )
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:172:  	ArithmeticOperationRange assertion: !(amount == -2147483648)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:172:  	Assignable assertion: _JML__tmp805 || (!Pre_15 || (_JML__tmp804.`alloc__ > 0 || `THIS == `THIS))
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 8985
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantExit assertion: _JML__tmp861
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:142:  	ensures balance == \old(balance) - amount; 
			VALUE: balance	 === 8985
			VALUE: balance	 === 8985
			VALUE: \old(balance)	 === 8985
			VALUE: amount	 === 5988
			VALUE: \old(balance) - amount	 === 2997
			VALUE: balance == \old(balance) - amount	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:168:  Invalid assertion (Postcondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:142:  Associated location





/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:539: warning: The prover cannot establish an assertion (Postcondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:379: ) in method menu
	        return result;
	        ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:379: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:539: 
	   	ensures balance == \old (balance) - amount;
	   	^

TRACE of BankAccount.menu(int,int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:362:  	requires option == 1 && isValid(amount); 
			VALUE: option	 === 3
			VALUE: 1	 === 1
			VALUE: option == 1	 === false
			VALUE: option == 1 && isValid(amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:363:  	requires amount + balance <= Integer.MAX_VALUE; 
			VALUE: amount	 === 1
			VALUE: balance	 === 16
			VALUE: amount + balance	 === 17
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: amount + balance <= Integer.MAX_VALUE	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:369:  	requires option == 2 && isValid(amount); 
			VALUE: option	 === 3
			VALUE: 2	 === 2
			VALUE: option == 2	 === false
			VALUE: option == 2 && isValid(amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:370:  	requires isValid(balance, amount); 
			VALUE: balance	 === 16
			VALUE: amount	 === 1
			VALUE: isValid(balance, amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:377:  	requires option == 3 && isValid(amount); 
			VALUE: option	 === 3
			VALUE: 3	 === 3
			VALUE: option == 3	 === true
			VALUE: amount	 === 1
			VALUE: isValid(amount)	 === true
			VALUE: option == 3 && isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp1948
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__73
			VALUE: _$CPRE__73	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:378:  	requires isValid(balance, amount); 
			VALUE: balance	 === 16
			VALUE: amount	 === 1
			VALUE: isValid(balance, amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp1967
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp1972
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__75
			VALUE: _$CPRE__75	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__74
			VALUE: _$CPRE__74	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:384:  	requires option == 3 && isValid(amount); 
			VALUE: option	 === 3
			VALUE: 3	 === 3
			VALUE: option == 3	 === true
			VALUE: amount	 === 1
			VALUE: isValid(amount)	 === true
			VALUE: option == 3 && isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp2003
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__76
			VALUE: _$CPRE__76	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:385:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 16
			VALUE: amount	 === 1
			VALUE: isValid(balance, amount)	 === true
			VALUE: !isValid(balance, amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp2022
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp2027
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__78
			VALUE: _$CPRE__78	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__77
			VALUE: _$CPRE__77	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:386:  	requires isValid(balance, 50); 
			VALUE: balance	 === 16
			VALUE: 50	 === 50
			VALUE: isValid(balance, 50)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:392:  	requires option == 3 && isValid(amount); 
			VALUE: option	 === 3
			VALUE: 3	 === 3
			VALUE: option == 3	 === true
			VALUE: amount	 === 1
			VALUE: isValid(amount)	 === true
			VALUE: option == 3 && isValid(amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp2091
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__81
			VALUE: _$CPRE__81	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:393:  	requires !isValid(balance, amount); 
			VALUE: balance	 === 16
			VALUE: amount	 === 1
			VALUE: isValid(balance, amount)	 === true
			VALUE: !isValid(balance, amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp2110
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp2115
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__83
			VALUE: _$CPRE__83	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__82
			VALUE: _$CPRE__82	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:394:  	requires !isValid(balance, 50); 
			VALUE: balance	 === 16
			VALUE: 50	 === 50
			VALUE: isValid(balance, 50)	 === false
			VALUE: !isValid(balance, 50)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:400:  	requires option == 4; 
			VALUE: option	 === 3
			VALUE: 4	 === 4
			VALUE: option == 4	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:405:  	old int _amount = amount + (amount / 100) * 5
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:406:  	requires option == 5; 
			VALUE: option	 === 3
			VALUE: 5	 === 5
			VALUE: option == 5	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:407:  	requires _amount <= Integer.MAX_VALUE; 
			VALUE: _amount	 === 1
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: _amount <= Integer.MAX_VALUE	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:408:  	requires isValid(_amount); 
			VALUE: _amount	 === 1
			VALUE: isValid(_amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:409:  	requires isValid(balance, _amount); 
			VALUE: balance	 === 16
			VALUE: _amount	 === 1
			VALUE: isValid(balance, _amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:415:  	old int _amount = amount + (amount / 100) * 5
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:416:  	requires option == 5; 
			VALUE: option	 === 3
			VALUE: 5	 === 5
			VALUE: option == 5	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:417:  	requires _amount <= Integer.MAX_VALUE; 
			VALUE: _amount	 === 1
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: _amount <= Integer.MAX_VALUE	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:418:  	requires isValid(_amount); 
			VALUE: _amount	 === 1
			VALUE: isValid(_amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:419:  	requires !isValid(balance, _amount); 
			VALUE: balance	 === 16
			VALUE: _amount	 === 1
			VALUE: isValid(balance, _amount)	 === false
			VALUE: !isValid(balance, _amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:425:  	old int _amount = amount - (amount / 100) * 2
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:426:  	requires option == 6 && isValid(_amount); 
			VALUE: option	 === 3
			VALUE: 6	 === 6
			VALUE: option == 6	 === false
			VALUE: option == 6 && isValid(_amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:427:  	requires isValid(balance, _amount); 
			VALUE: balance	 === 16
			VALUE: _amount	 === 1
			VALUE: isValid(balance, _amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:433:  	old int _amount = amount - (amount / 100) * 2
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:434:  	requires option == 6 && isValid(_amount); 
			VALUE: option	 === 3
			VALUE: 6	 === 6
			VALUE: option == 6	 === false
			VALUE: option == 6 && isValid(_amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:435:  	requires !isValid(balance, _amount); 
			VALUE: balance	 === 16
			VALUE: _amount	 === 1
			VALUE: isValid(balance, _amount)	 === false
			VALUE: !isValid(balance, _amount)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:441:  	old int _amount = amount - (amount / 100) * 5
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:442:  	requires option == 7 && isValid(_amount); 
			VALUE: option	 === 3
			VALUE: 7	 === 7
			VALUE: option == 7	 === false
			VALUE: option == 7 && isValid(_amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:443:  	requires _amount + balance <= Integer.MAX_VALUE; 
			VALUE: _amount	 === 1
			VALUE: balance	 === 16
			VALUE: _amount + balance	 === 17
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: _amount + balance <= Integer.MAX_VALUE	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:449:  	requires option == 8 && balance <= 20000; 
			VALUE: option	 === 3
			VALUE: 8	 === 8
			VALUE: option == 8	 === false
			VALUE: option == 8 && balance <= 20000	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:454:  	requires option == 8 && 20000 < balance && balance <= 160000; 
			VALUE: option	 === 3
			VALUE: 8	 === 8
			VALUE: option == 8	 === false
			VALUE: option == 8 && 20000 < balance	 === false
			VALUE: option == 8 && 20000 < balance && balance <= 160000	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:459:  	requires option == 8 && 160000 < balance && balance <= 300000; 
			VALUE: option	 === 3
			VALUE: 8	 === 8
			VALUE: option == 8	 === false
			VALUE: option == 8 && 160000 < balance	 === false
			VALUE: option == 8 && 160000 < balance && balance <= 300000	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:464:  	requires option == 8 && 300000 < balance && balance <= Integer.MAX_VALUE; 
			VALUE: option	 === 3
			VALUE: 8	 === 8
			VALUE: option == 8	 === false
			VALUE: option == 8 && 300000 < balance	 === false
			VALUE: option == 8 && 300000 < balance && balance <= Integer.MAX_VALUE	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:469:  	requires option == 9; 
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option == 9	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:470:  	old int ATMpenalty = 4
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:471:  	requires amount + ATMpenalty <= Integer.MAX_VALUE; 
			VALUE: amount	 === 1
			VALUE: ATMpenalty	 === 3
			VALUE: amount + ATMpenalty	 === 4
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: amount + ATMpenalty <= Integer.MAX_VALUE	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:472:  	requires isValid(amount); 
			VALUE: amount	 === 1
			VALUE: isValid(amount)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:473:  	requires 0 <= balance - amount + ATMpenalty; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: amount	 === 1
			VALUE: balance - amount	 === 15
			VALUE: ATMpenalty	 === 3
			VALUE: balance - amount + ATMpenalty	 === 18
			VALUE: 0 <= balance - amount + ATMpenalty	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:474:  	requires isValid(balance, (amount + ATMpenalty)); 
			VALUE: balance	 === 16
			VALUE: amount	 === 1
			VALUE: ATMpenalty	 === 3
			VALUE: amount + ATMpenalty	 === 4
			VALUE: (amount + ATMpenalty)	 === 4
			VALUE: isValid(balance, (amount + ATMpenalty))	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:360:  	requires 0 <= option && option <= 9; 
			VALUE: 0	 === 0
			VALUE: option	 === 3
			VALUE: 0 <= option	 === true
			VALUE: option	 === 3
			VALUE: 9	 === 9
			VALUE: option <= 9	 === true
			VALUE: 0 <= option && option <= 9	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:480:  	requires option == 0; 
			VALUE: option	 === 3
			VALUE: 0	 === 0
			VALUE: option == 0	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:486:  	int result
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:487:  	result = 0
			VALUE: 0	 === 0
			VALUE: result = 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	switch (option) ...
			VALUE: option	 === 3
			VALUE: (option)	 === 3
				Selection = 3
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	case 3:
			VALUE: 3	 === 3
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:502:  	checkWithdrawal(amount)
			VALUE: amount	 === 1
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp3075
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp3078
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:139:  	requires isValid(amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp3082
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__116
			VALUE: _$CPRE__116	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:140:  	requires isValid(balance, amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp3101
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__118
			VALUE: _$CPRE__118	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__117
			VALUE: _$CPRE__117	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:147:  	requires isValid(amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__119
			VALUE: _$CPRE__119	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:148:  	requires !isValid(balance, amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp3144
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__121
			VALUE: _$CPRE__121	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__120
			VALUE: _$CPRE__120	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:149:  	requires isValid(balance, 50); 
			VALUE: 50	 === 50
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:156:  	requires isValid(amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__124
			VALUE: _$CPRE__124	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:157:  	requires !isValid(balance, amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp3217
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__126
			VALUE: _$CPRE__126	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__125
			VALUE: _$CPRE__125	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:158:  	requires !isValid(balance, 50); 
			VALUE: 50	 === 50
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:165:  	requires !isValid(amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__129
			VALUE: _$CPRE__129	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 16
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:140:  	Precondition assertion: _$CPRE__115
			VALUE: _$CPRE__115	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	Assignable assertion: _JML__tmp3301 || true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	Assignable assertion: _JML__tmp3345 || true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:503:  	withdraw(amount)
			VALUE: amount	 === 1
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp3720
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp3723
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:111:  	requires isValid(amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp3727
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__131
			VALUE: _$CPRE__131	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:112:  	requires isValid(balance, amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp3746
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__133
			VALUE: _$CPRE__133	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__132
			VALUE: _$CPRE__132	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:119:  	requires isValid(amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__134
			VALUE: _$CPRE__134	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:120:  	requires !isValid(balance, amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:72:  	requires isValid(_amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp3789
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__136
			VALUE: _$CPRE__136	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:73:  	requires 0 <= _balance; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	requires 0 <= _balance - _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:80:  	requires _balance - _amount < 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:75:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__135
			VALUE: _$CPRE__135	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:126:  	requires !isValid(amount); 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	requires 0 < _amount; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:61:  	requires _amount <= 0; 
			VALUE: 0	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:56:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__137
			VALUE: _$CPRE__137	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 15
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:112:  	Precondition assertion: _$CPRE__130
			VALUE: _$CPRE__130	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	Assignable assertion: _JML__tmp3841 || true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	Assignable assertion: _JML__tmp3883 || true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 14
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 14
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:504:  	result = getBalance()
			VALUE: getBalance()	 === 14
			VALUE: result = getBalance()	 === 14
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 14
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantLeaveCaller assertion: _JML__tmp4013
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 14
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantEntrance assertion: _JML__tmp4016
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	Precondition assertion: _$CPRE__138
			VALUE: _$CPRE__138	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 14
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:1:  	UndefinedNullDeReference assertion: `THIS != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:505:  	break;
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:539:  	return result;
			VALUE: result	 === 14
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	//@ invariant 0 <= balance; 
			VALUE: 0	 === 0
			VALUE: balance	 === 14
			VALUE: 0 <= balance	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:5:  	InvariantExit assertion: _JML__tmp5295
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:379:  	ensures balance == \old(balance) - amount; 
			VALUE: balance	 === 14
			VALUE: balance	 === 16
			VALUE: \old(balance)	 === 16
			VALUE: amount	 === 1
			VALUE: \old(balance) - amount	 === 15
			VALUE: balance == \old(balance) - amount	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:539:  Invalid assertion (Postcondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/BankAccount/bug20/Repaired/BankAccount.java:379:  Associated location

14 warnings
