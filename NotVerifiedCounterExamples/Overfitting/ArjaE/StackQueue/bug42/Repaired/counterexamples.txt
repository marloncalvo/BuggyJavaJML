/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:262: warning: The prover cannot establish an assertion (Postcondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:248: ) in method isContain
        		 	       return false; //return true;
        		 	       ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:248: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:262: 
    		//@   ensures !\result ==> \forall int i; 0 <= i && i < rear; queue[i] != key;
    		      ^

TRACE of StackQueue.Queue.isContain(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:160:  	//@ public invariant 0 <= rear && rear <= MAX; 
			VALUE: 0	 === 0
			VALUE: rear	 === 56
			VALUE: 0 <= rear	 === true
			VALUE: rear	 === 56
			VALUE: MAX	 === 100
			VALUE: rear <= MAX	 === true
			VALUE: 0 <= rear && rear <= MAX	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:161:  	//@ public invariant front == 0; 
			VALUE: front	 === 0
			VALUE: 0	 === 0
			VALUE: front == 0	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:162:  	//@ public invariant queue.length == MAX; 
			VALUE: queue	 === REF!val!15
			VALUE: queue.length	 === 100
			VALUE: MAX	 === 100
			VALUE: queue.length == MAX	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:162:  	UndefinedNullDeReference assertion: !(`THIS.queue != null) || `THIS.queue != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:251:  	int index = 0
			VALUE: 0	 === 0
			VALUE: index	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:252:  	//@ loop_invariant 0 <= index && index <= rear;
			VALUE: 0	 === 0
			VALUE: index	 === 0
			VALUE: 0 <= index	 === true
			VALUE: index	 === 0
			VALUE: rear	 === 56
			VALUE: index <= rear	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:252:  	LoopInvariantBeforeLoop assertion: `conditionalResult_2252
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:253:  	//@ loop_invariant \forall int i; 0 <= i && i < index; queue[i] != key;
			VALUE: \forall int i; 0 <= i && i < index; queue[i] != key	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:253:  	LoopInvariantBeforeLoop assertion: _JML__tmp2257
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:252:  	//@ loop_invariant 0 <= index && index <= rear;
			VALUE: 0	 === 0
			VALUE: index	 === 36
			VALUE: 0 <= index	 === true
			VALUE: index	 === 36
			VALUE: rear	 === 56
			VALUE: index <= rear	 === true
			VALUE: 0 <= index && index <= rear	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:253:  	//@ loop_invariant \forall int i; 0 <= i && i < index; queue[i] != key;
			VALUE: \forall int i; 0 <= i && i < index; queue[i] != key	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:254:  	Loop test
			VALUE: index	 === 36
			VALUE: rear	 === 56
			VALUE: index < rear	 === true
			VALUE: (index < rear)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:1:  	if (key == queue[index]) ...
			VALUE: key	 === ( - 2147477795 )
			VALUE: queue	 === REF!val!15
			VALUE: index	 === 36
			VALUE: queue[index]	 === ( - 2147477795 )
			VALUE: key == queue[index]	 === true
			VALUE: (key == queue[index])	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:255:  	PossiblyNullDeReference assertion: `THIS.queue != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:255:  	PossiblyNegativeIndex assertion: 0 <= index
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:255:  	PossiblyTooLargeIndex assertion: `THIS.queue.length > index
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:256:  	Loop test
			VALUE: 0	 === 0
			VALUE: index	 === ( - 2147483648 )
			VALUE: 0 <= index	 === false
			VALUE: (0 <= index)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:262:  	return false;
			VALUE: false	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:159:  	NullField assertion: _JML__tmp2360
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:247:  	ensures \result ==> \exists int i; 0 <= i && i < rear; queue[i] == key; 
			VALUE: \result	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:248:  	ensures !\result ==> \forall int i; 0 <= i && i < rear; queue[i] != key; 
			VALUE: \result	 === false
			VALUE: !\result	 === true
			VALUE: \forall int i; 0 <= i && i < rear; queue[i] != key	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:262:  Invalid assertion (Postcondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:248:  Associated location

/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:257: warning: The prover cannot establish an assertion (Precondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:327: ) in method isContain
  						if (key == getElem(index)) {
  						                  ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:327: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:257: 
    		public /*@ pure @*/ int getElem(int i) 
    		                        ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:325: warning: Precondition conjunct is false: i < rear
    		//@   requires 0 <= i && i < rear;
    		                           ^

TRACE of StackQueue.Queue.isContain(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:160:  	//@ public invariant 0 <= rear && rear <= MAX; 
			VALUE: 0	 === 0
			VALUE: rear	 === 45
			VALUE: 0 <= rear	 === true
			VALUE: rear	 === 45
			VALUE: MAX	 === 100
			VALUE: rear <= MAX	 === true
			VALUE: 0 <= rear && rear <= MAX	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:161:  	//@ public invariant front == 0; 
			VALUE: front	 === 0
			VALUE: 0	 === 0
			VALUE: front == 0	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:162:  	//@ public invariant queue.length == MAX; 
			VALUE: queue	 === REF!val!15
			VALUE: queue.length	 === 100
			VALUE: MAX	 === 100
			VALUE: queue.length == MAX	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:162:  	UndefinedNullDeReference assertion: !(`THIS.queue != null) || `THIS.queue != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:251:  	int index = 0
			VALUE: 0	 === 0
			VALUE: index	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:252:  	//@ loop_invariant 0 <= index && index <= rear;
			VALUE: 0	 === 0
			VALUE: index	 === 0
			VALUE: 0 <= index	 === true
			VALUE: index	 === 0
			VALUE: rear	 === 45
			VALUE: index <= rear	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:252:  	LoopInvariantBeforeLoop assertion: `conditionalResult_2252
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:253:  	//@ loop_invariant \forall int i; 0 <= i && i < index; queue[i] != key;
			VALUE: \forall int i; 0 <= i && i < index; queue[i] != key	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:253:  	LoopInvariantBeforeLoop assertion: _JML__tmp2257
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:252:  	//@ loop_invariant 0 <= index && index <= rear;
			VALUE: 0	 === 0
			VALUE: index	 === 0
			VALUE: 0 <= index	 === true
			VALUE: index	 === 0
			VALUE: rear	 === 45
			VALUE: index <= rear	 === true
			VALUE: 0 <= index && index <= rear	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:253:  	//@ loop_invariant \forall int i; 0 <= i && i < index; queue[i] != key;
			VALUE: \forall int i; 0 <= i && i < index; queue[i] != key	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:254:  	Loop test
			VALUE: index	 === 0
			VALUE: rear	 === 45
			VALUE: index < rear	 === true
			VALUE: (index < rear)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:1:  	if (key == queue[index]) ...
			VALUE: key	 === ( - 2147477795 )
			VALUE: queue	 === REF!val!15
			VALUE: index	 === 0
			VALUE: queue[index]	 === ( - 2147477795 )
			VALUE: key == queue[index]	 === true
			VALUE: (key == queue[index])	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:255:  	PossiblyNullDeReference assertion: `THIS.queue != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:255:  	PossiblyNegativeIndex assertion: 0 <= index
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:255:  	PossiblyTooLargeIndex assertion: `THIS.queue.length > index
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:256:  	Loop test
			VALUE: 0	 === 0
			VALUE: index	 === 45
			VALUE: 0 <= index	 === true
			VALUE: (0 <= index)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:1:  	if (key == getElem(index)) ...
			VALUE: key	 === ( - 2147477795 )
			VALUE: index	 === 45
			VALUE: getElem(index)	 === ( - 2147477794 )
			VALUE: key == getElem(index)	 === false
			VALUE: (key == getElem(index))	 === false
				Condition = false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:160:  	//@ public invariant 0 <= rear && rear <= MAX; 
			VALUE: 0	 === 0
			VALUE: rear	 === 45
			VALUE: 0 <= rear	 === true
			VALUE: rear	 === 45
			VALUE: MAX	 === 100
			VALUE: rear <= MAX	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:160:  	InvariantLeaveCaller assertion: `conditionalResult_2280
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:161:  	//@ public invariant front == 0; 
			VALUE: front	 === 0
			VALUE: 0	 === 0
			VALUE: front == 0	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:161:  	InvariantLeaveCaller assertion: _JML__tmp2287
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:162:  	//@ public invariant queue.length == MAX; 
			VALUE: queue	 === REF!val!15
			VALUE: queue.length	 === 100
			VALUE: MAX	 === 100
			VALUE: queue.length == MAX	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:162:  	UndefinedNullDeReference assertion: !(`THIS.queue != null) || `THIS.queue != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:162:  	InvariantLeaveCaller assertion: _JML__tmp2291
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:160:  	//@ public invariant 0 <= rear && rear <= MAX; 
			VALUE: 0	 === 0
			VALUE: rear	 === 45
			VALUE: 0 <= rear	 === true
			VALUE: rear	 === 45
			VALUE: MAX	 === 100
			VALUE: rear <= MAX	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:160:  	InvariantEntrance assertion: `conditionalResult_2295
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:161:  	//@ public invariant front == 0; 
			VALUE: front	 === 0
			VALUE: 0	 === 0
			VALUE: front == 0	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:161:  	InvariantEntrance assertion: _JML__tmp2302
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:162:  	//@ public invariant queue.length == MAX; 
			VALUE: queue	 === REF!val!15
			VALUE: queue.length	 === 100
			VALUE: MAX	 === 100
			VALUE: queue.length == MAX	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:162:  	UndefinedNullDeReference assertion: !(`THIS.queue != null) || `THIS.queue != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:162:  	InvariantEntrance assertion: _JML__tmp2306
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:325:  	requires 0 <= i && i < rear; 
			VALUE: i	 === 45
			VALUE: 0 <= i	 === true
			VALUE: i	 === 45
			VALUE: rear	 === 45
			VALUE: i < rear	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:325:  	Precondition assertion: _$CPRE__42
			VALUE: _$CPRE__42	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:257:  Invalid assertion (Precondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/ArjaE/StackQueue/bug42/Repaired/StackQueue.java:327:  Associated location

5 warnings
