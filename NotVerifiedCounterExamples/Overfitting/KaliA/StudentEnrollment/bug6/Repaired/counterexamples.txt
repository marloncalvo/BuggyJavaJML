
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:60: warning: The prover cannot establish an assertion (Assignable: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:55: ) in method setPassedCredits:  this.passedCredits
            this.passedCredits = passedCredits;
                               ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:55: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:60: 
      @   	assignable \nothing;
          	^

TRACE of StudentEnrollment.setPassedCredits(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 16
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 16
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147474793 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:49:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:54:  	requires passedCredits < 0 || totalCredits < passedCredits; 
			VALUE: passedCredits	 === 121
			VALUE: passedCredits < 0	 === false
			VALUE: totalCredits	 === 120
			VALUE: passedCredits	 === 121
			VALUE: totalCredits < passedCredits	 === true
			VALUE: passedCredits < 0 || totalCredits < passedCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:1:  	if (true) ...
			VALUE: true	 === true
			VALUE: (true)	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:60:  	this.passedCredits = passedCredits
			VALUE: passedCredits	 === 121
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:1:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:60:  	Assignable assertion: _JML__tmp753 || (!Pre_5 || _JML__tmp752.`alloc__ > 0)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:60:  Invalid assertion (Assignable)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:55:  Associated location


/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:57: warning: The prover cannot establish an assertion (Postcondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:53: ) in method setPassedCredits
    public void setPassedCredits(int passedCredits)
                ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:53: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:57: 
      @      public exceptional_behavior
                    ^

TRACE of StudentEnrollment.setPassedCredits(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 6
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 6
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147482325 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:49:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:54:  	requires passedCredits < 0 || totalCredits < passedCredits; 
			VALUE: passedCredits	 === 121
			VALUE: passedCredits < 0	 === false
			VALUE: totalCredits	 === 120
			VALUE: passedCredits	 === 121
			VALUE: totalCredits < passedCredits	 === true
			VALUE: passedCredits < 0 || totalCredits < passedCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:1:  	if (true) ...
			VALUE: true	 === true
			VALUE: (true)	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:60:  	this.passedCredits = passedCredits
			VALUE: passedCredits	 === 121
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:1:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:60:  	Assignable assertion: _JML__tmp753 || (!Pre_5 || _JML__tmp752.`alloc__ > 0)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 6
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 6
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:10:  	InvariantExit assertion: `conditionalResult_787
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147482325 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:12:  	InvariantExit assertion: _JML__tmp804
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:6:  	NullField assertion: _JML__tmp828
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:7:  	NullField assertion: _JML__tmp832
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:1:  	ensures false; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:57:  Invalid assertion (Postcondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug6/Repaired/StudentEnrollment.java:53:  Associated location

4 warnings
