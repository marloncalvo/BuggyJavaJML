
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162: warning: The prover cannot establish an assertion (Assignable: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:156: ) in method regularEnrollment:  tuitionBalance
        	tuitionBalance = getTuition() + cost;
        	               ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:156: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162: 
      @   	assignable \nothing;
          	^

TRACE of StudentEnrollment.regularEnrollment()
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:149:  	requires registrationPermission(); 
			VALUE: registrationPermission()	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantLeaveCaller assertion: `conditionalResult_2263
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: _JML__tmp2280
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2284
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2301
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__358
			VALUE: _$CPRE__358	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:150:  	requires this.tuitionBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: this.tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: this.tuitionBalance + maxSemesterCredits * costPerCredit	 === 8017
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: this.tuitionBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:155:  	requires !registrationPermission(); 
			VALUE: registrationPermission()	 === false
			VALUE: !registrationPermission()	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2340
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2357
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__359
			VALUE: _$CPRE__359	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	if (true) ...
			VALUE: true	 === true
			VALUE: (true)	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:161:  	int cost = getEnrollmentCredits() * costPerCredit
			VALUE: getEnrollmentCredits()	 === 0
			VALUE: costPerCredit	 === 200
			VALUE: getEnrollmentCredits() * costPerCredit	 === 0
			VALUE: cost	 === 0
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantLeaveCaller assertion: `conditionalResult_2390
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: _JML__tmp2407
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2411
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2428
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__360
			VALUE: _$CPRE__360	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedNullDeReference assertion: `THIS != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:161:  	ArithmeticOperationRange assertion: |#mul32ok#|(_JML__tmp2429, StudentEnrollment.costPerCredit)
			VALUE: |#mul32ok#|(_JML__tmp2429, StudentEnrollment_costPerCredit)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	tuitionBalance = getTuition() + cost
			VALUE: getTuition()	 === 4017
			VALUE: cost	 === 0
			VALUE: getTuition() + cost	 === 4017
			VALUE: tuitionBalance = getTuition() + cost	 === 4017
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantLeaveCaller assertion: `conditionalResult_2462
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: _JML__tmp2479
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2483
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2500
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__361
			VALUE: _$CPRE__361	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 0
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 0
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4017
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedNullDeReference assertion: `THIS != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	ArithmeticOperationRange assertion: !(0 < _JML__tmp2501 && 0 < cost) || _JML__tmp2501 <= 2147483647 - cost
			VALUE: !(0 < _JML__tmp2501 && 0 < cost_5959_5959___52) || _JML__tmp2501 <= 2147483647 - cost_5959_5959___52	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	ArithmeticOperationRange assertion: !(_JML__tmp2501 < 0 && cost < 0) || -2147483648 - cost <= _JML__tmp2501
			VALUE: !(_JML__tmp2501 < 0 && cost_5959_5959___52 < 0) || -2147483648 - cost_5959_5959___52 <= _JML__tmp2501	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	Assignable assertion: _JML__tmp2533 || (!Pre_18 || _JML__tmp2532.`alloc__ > 0)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  Invalid assertion (Assignable)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:156:  Associated location


/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:158: warning: The prover cannot establish an assertion (InvariantExit: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12: ) in method regularEnrollment
    public void regularEnrollment()
                ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:158: 
    /*@ public invariant tuitionBalance <= 
               ^

TRACE of StudentEnrollment.regularEnrollment()
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:149:  	requires registrationPermission(); 
			VALUE: registrationPermission()	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantLeaveCaller assertion: `conditionalResult_2263
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: _JML__tmp2280
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2284
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2301
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__358
			VALUE: _$CPRE__358	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:150:  	requires this.tuitionBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: this.tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: this.tuitionBalance + maxSemesterCredits * costPerCredit	 === 4241
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: this.tuitionBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:155:  	requires !registrationPermission(); 
			VALUE: registrationPermission()	 === false
			VALUE: !registrationPermission()	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2340
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2357
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__359
			VALUE: _$CPRE__359	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	if (true) ...
			VALUE: true	 === true
			VALUE: (true)	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:161:  	int cost = getEnrollmentCredits() * costPerCredit
			VALUE: getEnrollmentCredits()	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: getEnrollmentCredits() * costPerCredit	 === 4000
			VALUE: cost	 === 4000
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantLeaveCaller assertion: `conditionalResult_2390
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: _JML__tmp2407
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2411
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2428
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__360
			VALUE: _$CPRE__360	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedNullDeReference assertion: `THIS != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:161:  	ArithmeticOperationRange assertion: |#mul32ok#|(_JML__tmp2429, StudentEnrollment.costPerCredit)
			VALUE: |#mul32ok#|(_JML__tmp2429, StudentEnrollment_costPerCredit)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	tuitionBalance = getTuition() + cost
			VALUE: getTuition()	 === 241
			VALUE: cost	 === 4000
			VALUE: getTuition() + cost	 === 4241
			VALUE: tuitionBalance = getTuition() + cost	 === 4241
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantLeaveCaller assertion: `conditionalResult_2462
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: _JML__tmp2479
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2483
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2500
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__361
			VALUE: _$CPRE__361	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedNullDeReference assertion: `THIS != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	ArithmeticOperationRange assertion: !(0 < _JML__tmp2501 && 0 < cost) || _JML__tmp2501 <= 2147483647 - cost
			VALUE: !(0 < _JML__tmp2501 && 0 < cost_5959_5959___52) || _JML__tmp2501 <= 2147483647 - cost_5959_5959___52	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	ArithmeticOperationRange assertion: !(_JML__tmp2501 < 0 && cost < 0) || -2147483648 - cost <= _JML__tmp2501
			VALUE: !(_JML__tmp2501 < 0 && cost_5959_5959___52 < 0) || -2147483648 - cost_5959_5959___52 <= _JML__tmp2501	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	Assignable assertion: _JML__tmp2533 || (!Pre_18 || _JML__tmp2532.`alloc__ > 0)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantExit assertion: `conditionalResult_2567
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4241
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantExit assertion: _JML__tmp2584
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:158:  Invalid assertion (InvariantExit)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  Associated location


/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:158: warning: The prover cannot establish an assertion (Postcondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:154: ) in method regularEnrollment
    public void regularEnrollment()
                ^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:154: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:158: 
      @      public exceptional_behavior
                    ^

TRACE of StudentEnrollment.regularEnrollment()
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:149:  	requires registrationPermission(); 
			VALUE: registrationPermission()	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantLeaveCaller assertion: `conditionalResult_2263
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: _JML__tmp2280
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2284
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2301
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__358
			VALUE: _$CPRE__358	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:150:  	requires this.tuitionBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE; 
			VALUE: this.tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: this.tuitionBalance + maxSemesterCredits * costPerCredit	 === 4001
			VALUE: Integer.MAX_VALUE	 === 2147483647
			VALUE: this.tuitionBalance + maxSemesterCredits * costPerCredit <= Integer.MAX_VALUE	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:155:  	requires !registrationPermission(); 
			VALUE: registrationPermission()	 === false
			VALUE: !registrationPermission()	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2340
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2357
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__359
			VALUE: _$CPRE__359	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	if (true) ...
			VALUE: true	 === true
			VALUE: (true)	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:161:  	int cost = getEnrollmentCredits() * costPerCredit
			VALUE: getEnrollmentCredits()	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: getEnrollmentCredits() * costPerCredit	 === 4000
			VALUE: cost	 === 4000
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantLeaveCaller assertion: `conditionalResult_2390
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: _JML__tmp2407
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2411
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2428
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__360
			VALUE: _$CPRE__360	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedNullDeReference assertion: `THIS != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:161:  	ArithmeticOperationRange assertion: |#mul32ok#|(_JML__tmp2429, StudentEnrollment.costPerCredit)
			VALUE: |#mul32ok#|(_JML__tmp2429, StudentEnrollment_costPerCredit)	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	tuitionBalance = getTuition() + cost
			VALUE: getTuition()	 === 1
			VALUE: cost	 === 4000
			VALUE: getTuition() + cost	 === 4001
			VALUE: tuitionBalance = getTuition() + cost	 === 4001
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantLeaveCaller assertion: `conditionalResult_2462
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantLeaveCaller assertion: _JML__tmp2479
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantEntrance assertion: `conditionalResult_2483
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantEntrance assertion: _JML__tmp2500
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__361
			VALUE: _$CPRE__361	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	UndefinedNullDeReference assertion: `THIS != null
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	ArithmeticOperationRange assertion: !(0 < _JML__tmp2501 && 0 < cost) || _JML__tmp2501 <= 2147483647 - cost
			VALUE: !(0 < _JML__tmp2501 && 0 < cost_5959_5959___52) || _JML__tmp2501 <= 2147483647 - cost_5959_5959___52	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	ArithmeticOperationRange assertion: !(_JML__tmp2501 < 0 && cost < 0) || -2147483648 - cost <= _JML__tmp2501
			VALUE: !(_JML__tmp2501 < 0 && cost_5959_5959___52 < 0) || -2147483648 - cost_5959_5959___52 <= _JML__tmp2501	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:162:  	Assignable assertion: _JML__tmp2533 || (!Pre_18 || _JML__tmp2532.`alloc__ > 0)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 20
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 20
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:10:  	InvariantExit assertion: `conditionalResult_2567
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 4001
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:12:  	InvariantExit assertion: _JML__tmp2584
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:6:  	NullField assertion: _JML__tmp2608
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:7:  	NullField assertion: _JML__tmp2612
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:1:  	ensures false; 
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:158:  Invalid assertion (Postcondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug21/Repaired/StudentEnrollment.java:154:  Associated location

6 warnings
