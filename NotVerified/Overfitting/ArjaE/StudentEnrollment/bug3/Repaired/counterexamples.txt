
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:62: warning: The prover cannot establish an assertion (Assignable: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:57: ) in method setPassedCredits:  this.passedCredits
            this.passedCredits = passedCredits;
                               ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:57: warning: Associated declaration: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:62: 
      @   	assignable \nothing;
          	^

TRACE of ArjaE.StudentEnrolment.bug3.Repaired.StudentEnrollment.setPassedCredits(int)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 16
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 16
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147474793 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:51:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: passedCredits	 === ( - 1 )
			VALUE: 0 <= passedCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:56:  	requires passedCredits < 0 || totalCredits < passedCredits; 
			VALUE: passedCredits	 === ( - 1 )
			VALUE: passedCredits < 0	 === true
			VALUE: passedCredits < 0 || totalCredits < passedCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:1:  	if (0 < passedCredits && passedCredits <= totalCredits || this.tuitionBalance <= 0) ...
			VALUE: 0	 === 0
			VALUE: passedCredits	 === ( - 1 )
			VALUE: 0 < passedCredits	 === false
			VALUE: 0 < passedCredits && passedCredits <= totalCredits	 === false
			VALUE: this.tuitionBalance	 === ( - 2147474793 )
			VALUE: 0	 === 0
			VALUE: this.tuitionBalance <= 0	 === true
			VALUE: 0 < passedCredits && passedCredits <= totalCredits || this.tuitionBalance <= 0	 === true
			VALUE: (0 < passedCredits && passedCredits <= totalCredits || this.tuitionBalance <= 0)	 === true
				Condition = true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:62:  	this.passedCredits = passedCredits
			VALUE: passedCredits	 === ( - 1 )
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:62:  	Assignable assertion: _JML__tmp763 || (!Pre_5 || _JML__tmp762.`alloc__ > 0)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:62:  Invalid assertion (Assignable)
: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:57:  Associated location


/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:59: warning: The prover cannot establish an assertion (Postcondition: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:55: ) in method setPassedCredits
    public void setPassedCredits(int passedCredits)
                ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:55: warning: Associated declaration: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:59: 
      @      public exceptional_behavior
                    ^

TRACE of ArjaE.StudentEnrolment.bug3.Repaired.StudentEnrollment.setPassedCredits(int)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 6
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 6
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147482325 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:51:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: passedCredits	 === 121
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:56:  	requires passedCredits < 0 || totalCredits < passedCredits; 
			VALUE: passedCredits	 === 121
			VALUE: passedCredits < 0	 === false
			VALUE: totalCredits	 === 120
			VALUE: passedCredits	 === 121
			VALUE: totalCredits < passedCredits	 === true
			VALUE: passedCredits < 0 || totalCredits < passedCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:1:  	if (0 < passedCredits && passedCredits <= totalCredits || this.tuitionBalance <= 0) ...
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 121
			VALUE: 0 < passedCredits	 === true
			VALUE: passedCredits	 === 121
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === false
			VALUE: 0 < passedCredits && passedCredits <= totalCredits	 === false
			VALUE: this.tuitionBalance	 === ( - 2147482325 )
			VALUE: 0	 === 0
			VALUE: this.tuitionBalance <= 0	 === true
			VALUE: 0 < passedCredits && passedCredits <= totalCredits || this.tuitionBalance <= 0	 === true
			VALUE: (0 < passedCredits && passedCredits <= totalCredits || this.tuitionBalance <= 0)	 === true
				Condition = true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:62:  	this.passedCredits = passedCredits
			VALUE: passedCredits	 === 121
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
			VALUE: null	 === NULL
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:62:  	Assignable assertion: _JML__tmp763 || (!Pre_5 || _JML__tmp762.`alloc__ > 0)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 6
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 6
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:12:  	InvariantExit assertion: `conditionalResult_797
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147482325 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:14:  	InvariantExit assertion: _JML__tmp814
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:8:  	NullField assertion: _JML__tmp838
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:9:  	NullField assertion: _JML__tmp842
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:1:  	ensures false; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:59:  Invalid assertion (Postcondition)
: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:55:  Associated location

/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:64: warning: The prover cannot establish an assertion (ExceptionalPostcondition: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:50: ) in method setPassedCredits
            throw new IllegalArgumentException();
            ^
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:50: warning: Associated declaration: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:64: 
    /*@      public normal_behavior
                    ^

TRACE of ArjaE.StudentEnrolment.bug3.Repaired.StudentEnrollment.setPassedCredits(int)
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 18
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 18
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:51:  	requires 0 <= passedCredits && passedCredits <= totalCredits; 
			VALUE: passedCredits	 === 0
			VALUE: 0 <= passedCredits	 === true
			VALUE: passedCredits	 === 0
			VALUE: totalCredits	 === 120
			VALUE: passedCredits <= totalCredits	 === true
			VALUE: 0 <= passedCredits && passedCredits <= totalCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:56:  	requires passedCredits < 0 || totalCredits < passedCredits; 
			VALUE: passedCredits	 === 0
			VALUE: passedCredits < 0	 === false
			VALUE: totalCredits	 === 120
			VALUE: passedCredits	 === 0
			VALUE: totalCredits < passedCredits	 === false
			VALUE: passedCredits < 0 || totalCredits < passedCredits	 === false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:1:  	if (0 < passedCredits && passedCredits <= totalCredits || this.tuitionBalance <= 0) ...
			VALUE: 0	 === 0
			VALUE: passedCredits	 === 0
			VALUE: 0 < passedCredits	 === false
			VALUE: 0 < passedCredits && passedCredits <= totalCredits	 === false
			VALUE: this.tuitionBalance	 === 1
			VALUE: 0	 === 0
			VALUE: this.tuitionBalance <= 0	 === false
			VALUE: 0 < passedCredits && passedCredits <= totalCredits || this.tuitionBalance <= 0	 === false
			VALUE: (0 < passedCredits && passedCredits <= totalCredits || this.tuitionBalance <= 0)	 === false
				Condition = false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:3:  	PossiblyNullDeReference assertion: `THIS != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:64:  	throw new IllegalArgumentException();
			VALUE: new IllegalArgumentException()	 === REF!val!35
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:1:  	Precondition assertion: _$CPRE__89
			VALUE: _$CPRE__89	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:1:  	UndefinedCalledMethodPrecondition assertion: _$CPRE__90
			VALUE: _$CPRE__90	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:52:  	UndefinedNullDeReference assertion: !(_JML__tmp767._throwables != null) || _JML__tmp767._throwables != null
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:12:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 18
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 18
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:12:  	InvariantExceptionExit assertion: `conditionalResult_818
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:14:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === 1
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:14:  	InvariantExceptionExit assertion: _JML__tmp835
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:50:  	Terminated with exception
			VALUE: `exception	 === REF!val!35
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:1:  	signals () false; 
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:50:  	ExceptionalPostcondition assertion: !Pre_4 || false
/mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:64:  Invalid assertion (ExceptionalPostcondition)
: /mnt/c/Users/marloncalvo/workspace/BuggyJavaJML/NotVerifiedCounterExamples/Overfitting/ArjaE/StudentEnrolment/bug3/Repaired/StudentEnrollment.java:50:  Associated location

6 warnings
