/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:146: warning: The prover cannot establish an assertion (Postcondition: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:142: ) in method validPayment
		return true;
		^
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:142: warning: Associated declaration: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:146: 
    //@   ensures \result <==> (0 < payment);
          ^

TRACE of StudentEnrollment.validPayment(int)
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:10:  	//@ public invariant 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits; 
			VALUE: 0	 === 0
			VALUE: enrollmentCredits	 === 16
			VALUE: 0 <= enrollmentCredits	 === true
			VALUE: enrollmentCredits	 === 16
			VALUE: maxSemesterCredits	 === 20
			VALUE: enrollmentCredits <= maxSemesterCredits	 === true
			VALUE: 0 <= enrollmentCredits && enrollmentCredits <= maxSemesterCredits	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:12:  	//@ public invariant tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6)); 
			VALUE: tuitionBalance	 === ( - 2147474793 )
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: maxSemesterCredits * costPerCredit	 === 4000
			VALUE: maxSemesterCredits	 === 20
			VALUE: costPerCredit	 === 200
			VALUE: 100	 === 100
			VALUE: costPerCredit / 100	 === 2
			VALUE: (costPerCredit / 100)	 === 2
			VALUE: 6	 === 6
			VALUE: (costPerCredit / 100) * 6	 === 12
			VALUE: ((costPerCredit / 100) * 6)	 === 12
			VALUE: maxSemesterCredits * ((costPerCredit / 100) * 6)	 === 240
			VALUE: (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 240
			VALUE: maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === 4240
			VALUE: tuitionBalance <= maxSemesterCredits * costPerCredit + (maxSemesterCredits * ((costPerCredit / 100) * 6))	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:1:  	if (true) ...
			VALUE: true	 === true
			VALUE: (true)	 === true
				Condition = true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:146:  	return true;
			VALUE: true	 === true
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:6:  	NullField assertion: _JML__tmp2173
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:7:  	NullField assertion: _JML__tmp2177
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:142:  	ensures \result <==> (0 < payment); 
			VALUE: \result	 === true
			VALUE: payment	 === 0
			VALUE: 0 < payment	 === false
			VALUE: (0 < payment)	 === false
			VALUE: \result <==> (0 < payment)	 === false
/home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:146:  Invalid assertion (Postcondition)
: /home/marloncalvo/workspace/buggyjavajml/NotVerifiedCounterExamples/Overfitting/Kali-A/StudentEnrollment/bug20/Repaired/StudentEnrollment.java:142:  Associated location

2 warnings
